<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="618ca0a1-6d51-425b-b9c6-6a5216107978" created="2.3.0" activeEnvironment="Default environment" name="SOAP Project 2" resourceRoot="${projectDir}" updated="2.3.0 2018-03-06T16:28:42Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:WsdlInterface" id="4b6806b0-1f5c-420c-8bef-5435410d50e0" wsaVersion="NONE" name="DistributedSoundScapeBinding" type="wsdl" bindingName="{DistributedSoundScape}DistributedSoundScapeBinding" soapVersion="1_1" anonymous="optional" definition="bpelContent/DistributedSoundScapeArtifacts.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="file:/B:/SOA/workspace/DistributedSoundScapeBPEL/bpelContent/DistributedSoundScapeArtifacts.wsdl">
      <con:part>
        <con:url>file:/B:/SOA/workspace/DistributedSoundScapeBPEL/bpelContent/DistributedSoundScapeArtifacts.wsdl</con:url>
        <con:content><![CDATA[<definitions name="DistributedSoundScape" targetNamespace="DistributedSoundScape" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:cs="http://www.example.org/ControlServiceElements/" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:rs="http://www.example.org/RegistrationServiceElements/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ssdt="http://www.example.org/SoundScapeDataTypes/" xmlns:tns="DistributedSoundScape" xmlns:types="http://www.example.org/OrchestratorElements/" xmlns:us="http://www.example.org/UploadServiceElements/" xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop" xmlns:wsdl="http://www.example.org/UploadService/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		TYPE DEFINITION - List of types participating in this BPEL process The BPEL 
		Designer will generate default request and response types but you can define 
		or import any XML Schema type and use them as part of the message types. 
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <vprop:property name="conversationId" type="xsd:string"/>
  <vprop:propertyAlias messageType="wsdl:UploadSongRequest" part="Request" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="wsdl:UploadSongResponse" part="Response" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="tns:functionRequest" part="functionRequest" propertyName="tns:conversationId"/>
  <vprop:propertyAlias messageType="tns:UploadSongRequest" part="UploadSongRequest" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="tns:stopRequest" part="stopRequest" propertyName="tns:conversationId"/>
  <import location="UploadService.wsdl" namespace="http://www.example.org/UploadService/"/>
  <types>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="DistributedSoundScape" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://www.example.org/RegistrationServiceElements/" schemaLocation="schemas/type-definitions/RegistrationServiceElements.xsd"/>
      <import namespace="http://www.example.org/ControlServiceElements/" schemaLocation="schemas/type-definitions/ControlServiceElements.xsd"/>
      <import namespace="http://www.example.org/UploadServiceElements/" schemaLocation="schemas/type-definitions/UploadServiceElements.xsd"/>
      <import namespace="http://www.example.org/OrchestratorElements/" schemaLocation="schemas/type-definitions/OrchestratorElements.xsd"/>
      <import namespace="http://www.example.org/SoundScapeDataTypes/" schemaLocation="schemas/type-definitions/SoundScapeDataTypes.xsd"/>
    </schema>
  </types>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		MESSAGE TYPE DEFINITION - Definition of the message types used as part of 
		the port type defintions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <message name="RegisterUserRequest">
    <part element="rs:RegisterUserRequest" name="RegisterUserRequest"/>
  </message>
  <message name="UploadSongRequest">
    <part element="types:CallUploadSong" name="UploadSongRequest"/>
  </message>
  <message name="DeleteSongRequest">
    <part element="types:CallDeleteSong" name="DeleteSongRequest"/>
  </message>
  <message name="IsSongLoadedRequest">
    <part element="types:CallIsSongLoaded" name="IsSongLoadedRequest"/>
  </message>
  <message name="AddSpeakerRequest">
    <part element="types:CallAddSpeaker" name="AddSpeakerRequest"/>
  </message>
  <message name="RemoveSpeakerRequest">
    <part element="types:CallRemoveSpeaker" name="RemoveSpeakerRequest"/>
  </message>
  <message name="ProcessPlaybackCommandRequest">
    <part element="types:CallPlaybackCommand" name="ProcessPlaybackCommandRequest"/>
  </message>
  <message name="SetSoundScapeSourceLayoutRequest">
    <part element="types:CallSetSoundScapeSourceLayout" name="SetSoundScapeSourceLayoutRequest"/>
  </message>
  <message name="stopRequest">
    <part element="types:Stop" name="stopRequest"/>
  </message>
  <message name="functionRequest">
    <part element="types:functionRequest" name="functionRequest"/>
  </message>
  <message name="finishMessage">
    <part element="rs:RegisterUserResponse" name="RegisterUserResponse"/>
  </message>
  <message name="uploadSongCallbackhMessage">
    <part element="types:UploadSongCallback" name="uploadSongCallbackhMessage"/>
  </message>
  <message name="deleteSongCallbackhMessage">
    <part element="types:DeleteSongCallback" name="deleteSongCallbackhMessage"/>
  </message>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		PORT TYPE DEFINITION - A port type groups a set of operations into a logical 
		service unit. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--portType implemented by the DistributedSoundScape BPEL process-->
  <portType name="DistributedSoundScape">
    <operation name="RegisterUserFunction">
      <input message="tns:RegisterUserRequest"/>
    </operation>
    <operation name="UploadSongFunction">
      <input message="tns:UploadSongRequest"/>
    </operation>
    <operation name="DeleteSongFunction">
      <input message="tns:DeleteSongRequest"/>
    </operation>
    <operation name="IsSongLoadedFunction">
      <input message="tns:IsSongLoadedRequest"/>
    </operation>
    <operation name="AddSpeakerFunction">
      <input message="tns:AddSpeakerRequest"/>
    </operation>
    <operation name="RemoveSpeakerFunction">
      <input message="tns:RemoveSpeakerRequest"/>
    </operation>
    <operation name="ProcessPlaybackCommandFunction">
      <input message="tns:ProcessPlaybackCommandRequest"/>
    </operation>
    <operation name="SetSoundScapeSourceLayoutFunction">
      <input message="tns:SetSoundScapeSourceLayoutRequest"/>
    </operation>
    <operation name="stopFunction">
      <input message="tns:stopRequest"/>
    </operation>
    <operation name="finishFunction">
      <input message="tns:finishMessage"/>
    </operation>
  </portType>
  <portType name="DistributedSoundScapeCallback">
    <operation name="requestFunction">
      <input message="tns:functionRequest"/>
    </operation>
    <operation name="uploadSongCallbackFunction">
      <input message="tns:uploadSongCallbackhMessage"/>
    </operation>
    <operation name="deleteSongCallbackFunction">
      <input message="tns:deleteSongCallbackhMessage"/>
    </operation>
  </portType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		PARTNER LINK TYPE DEFINITION ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <plnk:partnerLinkType name="DistributedSoundScape">
    <plnk:role name="DistributedSoundScapeProvider" portType="tns:DistributedSoundScape"/>
    <plnk:role name="DistributedSoundScapeRequester" portType="tns:DistributedSoundScapeCallback"/>
  </plnk:partnerLinkType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		BINDING DEFINITION - Defines the message format and protocol details for 
		a web service. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <binding name="DistributedSoundScapeBinding" type="tns:DistributedSoundScape">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="RegisterUserFunction">
      <soap:operation soapAction="DistributedSoundScape/RegisterUserFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="UploadSongFunction">
      <soap:operation soapAction="DistributedSoundScape/UploadSongFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="DeleteSongFunction">
      <soap:operation soapAction="DistributedSoundScape/DeleteSongFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="IsSongLoadedFunction">
      <soap:operation soapAction="DistributedSoundScape/IsSongLoadedFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="AddSpeakerFunction">
      <soap:operation soapAction="DistributedSoundScape/AddSpeakerFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="RemoveSpeakerFunction">
      <soap:operation soapAction="DistributedSoundScape/RemoveSpeakerFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="ProcessPlaybackCommandFunction">
      <soap:operation soapAction="DistributedSoundScape/ProcessPlaybackCommandFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="SetSoundScapeSourceLayoutFunction">
      <soap:operation soapAction="DistributedSoundScape/SetSoundScapeSourceLayoutFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="stopFunction">
      <soap:operation soapAction="DistributedSoundScape/stopFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="finishFunction">
      <soap:operation soapAction="DistributedSoundScape/finishFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
  </binding>
  <binding name="DistributedSoundScapeCallbackBinding" type="tns:DistributedSoundScapeCallback">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="requestFunction">
      <soap:operation soapAction="DistributedSoundScape/requestFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="uploadSongCallbackFunction">
      <soap:operation soapAction="DistributedSoundScape/uploadSongCallbackFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="deleteSongCallbackFunction">
      <soap:operation soapAction="DistributedSoundScape/deleteSongCallbackFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
  </binding>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		SERVICE DEFINITION - A service groups a set of ports into a service unit. 
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <service name="DistributedSoundScapeServiceCallback">
    <port binding="tns:DistributedSoundScapeCallbackBinding" name="DistributedSoundScapePortCallbackPort">
      <soap:address location="http://localhost:8182/onResult"/>
    </port>
  </service>
  <service name="DistributedSoundScapeService">
    <port binding="tns:DistributedSoundScapeBinding" name="DistributedSoundScapePort">
      <soap:address location="http://localhost:8080/ode/processes/DistributedSoundScape"/>
    </port>
  </service>
</definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\UploadService.wsdl</con:url>
        <con:content><![CDATA[<wsdl:definitions name="UploadService" targetNamespace="http://www.example.org/UploadService/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.example.org/UploadService/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:types="http://www.example.org/UploadServiceElements/" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
  <wsdl:types>
    <xsd:schema targetNamespace="http://www.example.org/UploadService/">
      <xsd:import namespace="http://www.example.org/UploadServiceElements/" schemaLocation="schemas/type-definitions/UploadServiceElements.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <plnk:partnerLinkType name="UploadServiceLinkType">
    <plnk:role name="uploadProvider" portType="tns:UploadService">
      <plnk:portType name="tns:UploadService"/>
    </plnk:role>
    <plnk:role name="uploadRequester" portType="tns:UploadCallbackService">
      <plnk:portType name="tns:UploadCallbackService"/>
    </plnk:role>
  </plnk:partnerLinkType>
  <!--Provider-->
  <wsdl:message name="UploadSongRequest">
    <wsdl:part name="Request" element="types:UploadSongRequest"/>
  </wsdl:message>
  <wsdl:message name="DeleteSongRequest">
    <wsdl:part name="Request" element="types:DeleteSongRequest"/>
  </wsdl:message>
  <wsdl:message name="IsSongLoadedRequest">
    <wsdl:part name="Request" element="types:IsSongLoadedRequest"/>
  </wsdl:message>
  <wsdl:message name="IsSongLoadedResponse">
    <wsdl:part name="Response" element="types:IsSongLoadedResponse"/>
  </wsdl:message>
  <!--Callback-->
  <wsdl:message name="UploadSongResponse">
    <wsdl:part name="Response" element="types:UploadSongResponse"/>
  </wsdl:message>
  <wsdl:message name="DeleteSongResponse">
    <wsdl:part name="Response" element="types:DeleteSongResponse"/>
  </wsdl:message>
  <wsdl:message name="ErrorMessage">
    <wsdl:part name="ErrorMessage" element="types:ErrorMessage"/>
  </wsdl:message>
  <!--Provider-->
  <wsdl:portType name="UploadService">
    <wsdl:operation name="UploadSong">
      <wsdl:input message="tns:UploadSongRequest"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteSong">
      <wsdl:input message="tns:DeleteSongRequest"/>
    </wsdl:operation>
    <wsdl:operation name="IsSongLoaded">
      <wsdl:input message="tns:IsSongLoadedRequest"/>
      <wsdl:output message="tns:IsSongLoadedResponse"/>
      <wsdl:fault name="Error" message="tns:ErrorMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--Callback-->
  <wsdl:portType name="UploadCallbackService">
    <wsdl:operation name="UploadSongCallback">
      <wsdl:input message="tns:UploadSongResponse"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteSongCallback">
      <wsdl:input message="tns:DeleteSongResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--Provider-->
  <wsdl:binding name="UploadServiceSOAP" type="tns:UploadService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="UploadSong">
      <soap:operation soapAction="http://www.example.org/UploadService/UploadSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="DeleteSong">
      <soap:operation soapAction="http://www.example.org/UploadService/DeleteSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="IsSongLoaded">
      <soap:operation soapAction="http://www.example.org/UploadService/IsSongLoaded"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Error">
        <soap:fault name="Error" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <!--Callback-->
  <wsdl:binding name="UploadCallbackServiceSOAP" type="tns:UploadCallbackService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="UploadSongCallback">
      <soap:operation soapAction="http://www.example.org/UploadCallbackService/UploadSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="DeleteSongCallback">
      <soap:operation soapAction="http://www.example.org/UploadCallbackService/DeleteSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <!--Provider-->
  <wsdl:service name="UploadService">
    <wsdl:port binding="tns:UploadServiceSOAP" name="UploadServiceSOAP">
      <soap:address location="http://localhost:9080/DistributedSoundScape/services/UploadService/"/>
    </wsdl:port>
  </wsdl:service>
  <!--Callback-->
  <wsdl:service name="UploadCallbackService">
    <wsdl:port binding="tns:UploadCallbackServiceSOAP" name="UploadCallbackServiceSOAP">
      <soap:address location="http://localhost:8080/ode/processes/UploadCallbackService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\UploadServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/UploadServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/UploadServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="UploadSongRequest" type="tns:UploadSongRequest"/>
  <element name="DeleteSongRequest" type="tns:DeleteSongRequest"/>
  <element name="IsSongLoadedRequest" type="tns:IsSongLoadedRequest"></element>
  <element name="IsSongLoadedResponse" type="boolean"/>
  <element name="DeleteSongResponse" type="tns:DeleteSongResponse"/>
  <element name="UploadSongResponse" type="tns:UploadSongResponse"/>
  <complexType name="DeleteSongRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="IsSongLoadedRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="UploadSongRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="ErrorMessage" type="string"/>
  <complexType name="UploadSongResponse">
    <sequence>
      <element name="conversationId" type="string"/>
      <element name="response" type="types:ASyncResponse"/>
    </sequence>
  </complexType>
  <complexType name="DeleteSongResponse">
    <sequence>
      <element name="response" type="types:ASyncResponse"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\SoundScapeDataTypes.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/SoundScapeDataTypes/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/SoundScapeDataTypes/">
  <simpleType name="SoundscapeId">
    <restriction base="unsignedInt"/>
  </simpleType>
  <simpleType name="Port">
    <restriction base="unsignedShort"/>
  </simpleType>
  <simpleType name="IPv4Address">
    <annotation>
      <documentation>IPv4 address in dot-decimal notation. Equivalent to [0-255].[0-255].[0-255].[0-255]</documentation>
    </annotation>
    <restriction base="string">
      <pattern value="((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"/>
    </restriction>
  </simpleType>
  <complexType name="Location">
    <sequence>
      <element name="x" type="short" maxOccurs="1" minOccurs="1"/>
      <element name="y" type="short" maxOccurs="1" minOccurs="1"/>
      <element name="z" type="short" maxOccurs="1" minOccurs="1"/>
    </sequence>
  </complexType>
  <complexType name="GeneralDevice">
    <sequence>
      <element name="IpAddress" type="tns:IPv4Address"/>
      <element name="Port" type="tns:Port"/>
      <element name="SoundScapeId" type="tns:SoundscapeId"/>
    </sequence>
  </complexType>
  <complexType name="SpeakerDevice">
    <sequence>
      <element name="GeneralDevice" type="tns:GeneralDevice"/>
      <element name="Location" type="tns:Location"/>
    </sequence>
  </complexType>
  <complexType name="SpeakerDeviceArray">
    <sequence>
      <element name="SpeakerDevice" type="tns:SpeakerDevice" maxOccurs="unbounded" minOccurs="0"/>
    </sequence>
  </complexType>
  <complexType name="Link">
    <sequence>
      <element name="Type" type="tns:LinkType"/>
      <element name="Address" type="string"/>
    </sequence>
  </complexType>
  <simpleType name="LinkType">
    <restriction base="string">
      <enumeration value="ftp"/>
      <enumeration value="http"/>
      <enumeration value="https"/>
    </restriction>
  </simpleType>
  <simpleType name="ChannelNumber">
    <restriction base="unsignedShort"/>
  </simpleType>
  <simpleType name="VolumeLevel">
    <restriction base="double">
      <minInclusive value="0"/>
    </restriction>
  </simpleType>
  <complexType name="ChannelLayout">
    <sequence>
      <element name="ChannelNumber" type="tns:ChannelNumber"/>
      <element name="Location" type="tns:Location"/>
      <element name="VolumeLevel" type="tns:VolumeLevel"/>
    </sequence>
  </complexType>
  <complexType name="SoundScapeSourceLayout">
    <sequence>
      <element name="ChannelLayouts" type="tns:ChannelLayout" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <simpleType name="PlaybackCommand">
    <restriction base="string"/>
  </simpleType>
  <complexType name="ASyncResponse">
    <choice>
      <element name="Successfull" type="boolean"/>
      <element name="ErrorMessage" type="string"/>
    </choice>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\RegistrationServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/RegistrationServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/RegistrationServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="RegisterUserRequest" type="tns:RegisterUserRequest"></element>
  <element name="RegisterUserResponse" type="boolean"/>
  <element name="GetSpeakersRequest" type="tns:GetSpeakersRequest"/>
  <element name="GetSpeakersResponse" type="tns:GetSpeakersResponse"></element>
  <element name="SetSpeakerLocationRequest" type="tns:SetSpeakerLocationRequest"></element>
  <complexType name="SetSpeakerLocationRequest">
    <sequence>
      <element name="SpeakerDevice" type="types:SpeakerDevice"/>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <complexType name="GetSpeakersRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <complexType name="GetSpeakersResponse">
    <sequence>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="RegisterUserRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="SetSpeakerLocationResponse" type="boolean"/>
  <complexType name="RemoveUserRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="RemoveUserRequest" type="tns:RemoveUserRequest"/>
  <element name="ErrorMessage" type="string"/>
  <element name="AddSpeakerRequest" type="tns:AddSpeakerRequest"/>
  <element name="RemoveSpeakerRequest" type="tns:RemoveSpeakerRequest"></element>
  <complexType name="AddSpeakerRequest">
    <sequence>
      <element name="Speaker" type="types:SpeakerDevice"/>
    </sequence>
  </complexType>
  <complexType name="RemoveSpeakerRequest">
    <sequence>
      <element name="Speaker" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="AddSpeakerResponse" type="boolean"/>
  <element name="RemoveSpeakerResponse" type="boolean"/>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\ControlServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/ControlServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/ControlServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="SetSoundScapeSourceLayoutRequest" type="tns:SetSoundScapeSourceLayoutRequest"></element>
  <complexType name="SetSoundScapeSourceLayoutRequest">
    <sequence>
      <element name="SoundScapeSourceLayout" type="types:SoundScapeSourceLayout"></element>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <element name="SetSoundScapeSourceLayoutResponse" type="boolean"/>
  <element name="ProcessPlaybackCommandRequest" type="tns:ProcessPlaybackCommandRequest"></element>
  <element name="ProcessPlaybackCommandResponse" type="boolean"/>
  <element name="ErrorMessage" type="string"/>
  <complexType name="ProcessPlaybackCommandRequest">
    <sequence>
      <element name="Command" type="types:PlaybackCommand"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\OrchestratorElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/OrchestratorElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/OrchestratorElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/" xmlns:pref="http://www.example.org/RegistrationServiceElements/" xmlns:pref1="http://www.example.org/ControlServiceElements/" xmlns:pref2="http://www.example.org/UploadServiceElements/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"></import>
  <import schemaLocation="RegistrationServiceElements.xsd" namespace="http://www.example.org/RegistrationServiceElements/"></import>
  <import schemaLocation="ControlServiceElements.xsd" namespace="http://www.example.org/ControlServiceElements/"></import>
  <import schemaLocation="UploadServiceElements.xsd" namespace="http://www.example.org/UploadServiceElements/"/>
  <complexType name="DeleteSongCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="IsSongLoadedCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="UploadSongCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="ConfirmRegistrationMessage" type="tns:RegisterUserResponse"></element>
  <complexType name="RegisterUserResponse">
    <sequence>
      <element name="RegisterUserReponse" type="boolean"/>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="Stop" type="tns:conversationId"/>
  <simpleType name="conversationId">
    <restriction base="string"/>
  </simpleType>
  <element name="CallUploadSong" type="tns:UploadSongCall"/>
  <element name="CallDeleteSong" type="tns:DeleteSongCall"/>
  <element name="CallIsSongLoaded" type="tns:IsSongLoadedCall"/>
  <element name="CallAddSpeaker" type="tns:AddSpeakerCall"/>
  <complexType name="AddSpeakerCall">
    <sequence>
      <element name="AddSpeakerRequest" type="pref:AddSpeakerRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="CallRemoveSpeaker" type="tns:CallRemoveSpeaker"/>
  <element name="CallMoveSpeaker" type="tns:CallMoveSpeaker"/>
  <element name="CallSetSoundScapeSourceLayout" type="tns:CallSetSoundScapeSourceLayout"></element>
  <element name="CallPlaybackCommand" type="tns:CallPlaybackCommand"></element>
  <complexType name="CallMoveSpeaker">
    <sequence>
      <element name="setSpeakerLocationRequest" type="pref:SetSpeakerLocationRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallPlaybackCommand">
    <sequence>
      <element name="playbackCommand" type="pref1:ProcessPlaybackCommandRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallRemoveSpeaker">
    <sequence>
      <element name="removeSpeakerRequest" type="pref:RemoveSpeakerRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallSetSoundScapeSourceLayout">
    <sequence>
      <element name="setSoundScapeSourceLayoutRequest" type="pref1:SetSoundScapeSourceLayoutRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="functionRequest" type="tns:conversationId"/>
  <element name="UploadSongCallback" type="pref2:UploadSongResponse"></element>
  <element name="DeleteSongCallback" type="pref2:DeleteSongResponse"></element>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
    </con:endpoints>
    <con:operation id="7327d8b2-a377-41f9-8a72-1759ec748f66" isOneWay="false" action="DistributedSoundScape/AddSpeakerFunction" name="AddSpeakerFunction" bindingOperationName="AddSpeakerFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="45883974-18e3-4891-887c-889f5e974311" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallAddSpeaker>\r
         <AddSpeakerRequest>\r
            <Speaker>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </Speaker>\r
         </AddSpeakerRequest>\r
         <conversationId>?</conversationId>\r
      </orc:CallAddSpeaker>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/AddSpeakerFunction"/>
      </con:call>
    </con:operation>
    <con:operation id="edb2785e-6c99-44a2-a5e1-171e4195fe5c" isOneWay="false" action="DistributedSoundScape/DeleteSongFunction" name="DeleteSongFunction" bindingOperationName="DeleteSongFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="e4d9150a-4ee2-4a4c-a20b-c2967c061d66" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallDeleteSong>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
         <conversationId>?</conversationId>\r
      </orc:CallDeleteSong>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/DeleteSongFunction"/>
      </con:call>
    </con:operation>
    <con:operation id="02d646d1-867b-4328-b539-4cc07260a61d" isOneWay="false" action="DistributedSoundScape/finishFunction" name="finishFunction" bindingOperationName="finishFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="8df845ea-3d3e-4061-80d0-e6586bfdb5cd" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:reg="http://www.example.org/RegistrationServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <reg:RegisterUserResponse>?</reg:RegisterUserResponse>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/finishFunction"/>
      </con:call>
    </con:operation>
    <con:operation id="bb0099ca-8653-4dba-a90f-79aac6302a1a" isOneWay="false" action="DistributedSoundScape/IsSongLoadedFunction" name="IsSongLoadedFunction" bindingOperationName="IsSongLoadedFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="777da659-c2d7-4252-bb60-e19285c61147" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallIsSongLoaded>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
         <conversationId>?</conversationId>\r
      </orc:CallIsSongLoaded>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/IsSongLoadedFunction"/>
      </con:call>
    </con:operation>
    <con:operation id="3f6e3c70-8598-4883-ac92-6bbb109d2a74" isOneWay="false" action="DistributedSoundScape/ProcessPlaybackCommandFunction" name="ProcessPlaybackCommandFunction" bindingOperationName="ProcessPlaybackCommandFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="761978b9-8211-41b8-af51-9e23b04945c2" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallPlaybackCommand>\r
         <playbackCommand>\r
            <Command>?</Command>\r
            <Speakers>\r
               <!--Zero or more repetitions:-->\r
               <SpeakerDevice>\r
                  <GeneralDevice>\r
                     <IpAddress>?</IpAddress>\r
                     <Port>?</Port>\r
                     <SoundScapeId>?</SoundScapeId>\r
                  </GeneralDevice>\r
                  <Location>\r
                     <x>?</x>\r
                     <y>?</y>\r
                     <z>?</z>\r
                  </Location>\r
               </SpeakerDevice>\r
            </Speakers>\r
         </playbackCommand>\r
         <conversationId>?</conversationId>\r
      </orc:CallPlaybackCommand>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/ProcessPlaybackCommandFunction"/>
      </con:call>
    </con:operation>
    <con:operation id="6599a48b-cd97-44bd-865f-2169deee8d45" isOneWay="false" action="DistributedSoundScape/RegisterUserFunction" name="RegisterUserFunction" bindingOperationName="RegisterUserFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="1a61279e-e535-4c1c-b9cf-c20650f202a8" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:reg="http://www.example.org/RegistrationServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <reg:RegisterUserRequest>\r
         <User>\r
            <IpAddress>?</IpAddress>\r
            <Port>?</Port>\r
            <SoundScapeId>?</SoundScapeId>\r
         </User>\r
      </reg:RegisterUserRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/RegisterUserFunction"/>
      </con:call>
    </con:operation>
    <con:operation id="af99bbf6-696f-427c-a4c2-52805e227d6b" isOneWay="false" action="DistributedSoundScape/RemoveSpeakerFunction" name="RemoveSpeakerFunction" bindingOperationName="RemoveSpeakerFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="9827024c-17e9-4c01-9e27-b3dcf356f0d5" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallRemoveSpeaker>\r
         <removeSpeakerRequest>\r
            <Speaker>\r
               <IpAddress>?</IpAddress>\r
               <Port>?</Port>\r
               <SoundScapeId>?</SoundScapeId>\r
            </Speaker>\r
         </removeSpeakerRequest>\r
         <conversationId>?</conversationId>\r
      </orc:CallRemoveSpeaker>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/RemoveSpeakerFunction"/>
      </con:call>
    </con:operation>
    <con:operation id="f776553b-4dd4-451c-b9df-6f7c861e9ee6" isOneWay="false" action="DistributedSoundScape/SetSoundScapeSourceLayoutFunction" name="SetSoundScapeSourceLayoutFunction" bindingOperationName="SetSoundScapeSourceLayoutFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="6bba70c1-18fb-410e-8531-669d9f75395c" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallSetSoundScapeSourceLayout>\r
         <setSoundScapeSourceLayoutRequest>\r
            <SoundScapeSourceLayout>\r
               <!--1 or more repetitions:-->\r
               <ChannelLayouts>\r
                  <ChannelNumber>?</ChannelNumber>\r
                  <Location>\r
                     <x>?</x>\r
                     <y>?</y>\r
                     <z>?</z>\r
                  </Location>\r
                  <VolumeLevel>?</VolumeLevel>\r
               </ChannelLayouts>\r
            </SoundScapeSourceLayout>\r
            <Speakers>\r
               <!--Zero or more repetitions:-->\r
               <SpeakerDevice>\r
                  <GeneralDevice>\r
                     <IpAddress>?</IpAddress>\r
                     <Port>?</Port>\r
                     <SoundScapeId>?</SoundScapeId>\r
                  </GeneralDevice>\r
                  <Location>\r
                     <x>?</x>\r
                     <y>?</y>\r
                     <z>?</z>\r
                  </Location>\r
               </SpeakerDevice>\r
            </Speakers>\r
         </setSoundScapeSourceLayoutRequest>\r
         <conversationId>?</conversationId>\r
      </orc:CallSetSoundScapeSourceLayout>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/SetSoundScapeSourceLayoutFunction"/>
      </con:call>
    </con:operation>
    <con:operation id="8e401d1f-1f3e-4f3f-8563-f735c842588e" isOneWay="false" action="DistributedSoundScape/stopFunction" name="stopFunction" bindingOperationName="stopFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="7301e30d-0a0a-4914-ab8d-33ac85adf3e9" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:Stop>?</orc:Stop>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/stopFunction"/>
      </con:call>
    </con:operation>
    <con:operation id="590c948d-5d7f-4ffa-8fda-93f1869f05bf" isOneWay="false" action="DistributedSoundScape/UploadSongFunction" name="UploadSongFunction" bindingOperationName="UploadSongFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="ba8c305b-5d47-4a98-a22f-ca3902fad1a4" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallUploadSong>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
         <conversationId>?</conversationId>\r
      </orc:CallUploadSong>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/UploadSongFunction"/>
      </con:call>
    </con:operation>
  </con:interface>
  <con:interface xsi:type="con:WsdlInterface" id="34dcdde7-8563-464c-8937-61c94572ddaf" wsaVersion="NONE" name="UploadServiceSOAP" type="wsdl" bindingName="{http://www.example.org/UploadService/}UploadServiceSOAP" soapVersion="1_1" anonymous="optional" definition="bpelContent/DistributedSoundScapeArtifacts.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="file:/B:/SOA/workspace/DistributedSoundScapeBPEL/bpelContent/DistributedSoundScapeArtifacts.wsdl">
      <con:part>
        <con:url>file:/B:/SOA/workspace/DistributedSoundScapeBPEL/bpelContent/DistributedSoundScapeArtifacts.wsdl</con:url>
        <con:content><![CDATA[<definitions name="DistributedSoundScape" targetNamespace="DistributedSoundScape" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:cs="http://www.example.org/ControlServiceElements/" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:rs="http://www.example.org/RegistrationServiceElements/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ssdt="http://www.example.org/SoundScapeDataTypes/" xmlns:tns="DistributedSoundScape" xmlns:types="http://www.example.org/OrchestratorElements/" xmlns:us="http://www.example.org/UploadServiceElements/" xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop" xmlns:wsdl="http://www.example.org/UploadService/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		TYPE DEFINITION - List of types participating in this BPEL process The BPEL 
		Designer will generate default request and response types but you can define 
		or import any XML Schema type and use them as part of the message types. 
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <vprop:property name="conversationId" type="xsd:string"/>
  <vprop:propertyAlias messageType="wsdl:UploadSongRequest" part="Request" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="wsdl:UploadSongResponse" part="Response" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="tns:functionRequest" part="functionRequest" propertyName="tns:conversationId"/>
  <vprop:propertyAlias messageType="tns:UploadSongRequest" part="UploadSongRequest" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="tns:stopRequest" part="stopRequest" propertyName="tns:conversationId"/>
  <import location="UploadService.wsdl" namespace="http://www.example.org/UploadService/"/>
  <types>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="DistributedSoundScape" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://www.example.org/RegistrationServiceElements/" schemaLocation="schemas/type-definitions/RegistrationServiceElements.xsd"/>
      <import namespace="http://www.example.org/ControlServiceElements/" schemaLocation="schemas/type-definitions/ControlServiceElements.xsd"/>
      <import namespace="http://www.example.org/UploadServiceElements/" schemaLocation="schemas/type-definitions/UploadServiceElements.xsd"/>
      <import namespace="http://www.example.org/OrchestratorElements/" schemaLocation="schemas/type-definitions/OrchestratorElements.xsd"/>
      <import namespace="http://www.example.org/SoundScapeDataTypes/" schemaLocation="schemas/type-definitions/SoundScapeDataTypes.xsd"/>
    </schema>
  </types>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		MESSAGE TYPE DEFINITION - Definition of the message types used as part of 
		the port type defintions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <message name="RegisterUserRequest">
    <part element="rs:RegisterUserRequest" name="RegisterUserRequest"/>
  </message>
  <message name="UploadSongRequest">
    <part element="types:CallUploadSong" name="UploadSongRequest"/>
  </message>
  <message name="DeleteSongRequest">
    <part element="types:CallDeleteSong" name="DeleteSongRequest"/>
  </message>
  <message name="IsSongLoadedRequest">
    <part element="types:CallIsSongLoaded" name="IsSongLoadedRequest"/>
  </message>
  <message name="AddSpeakerRequest">
    <part element="types:CallAddSpeaker" name="AddSpeakerRequest"/>
  </message>
  <message name="RemoveSpeakerRequest">
    <part element="types:CallRemoveSpeaker" name="RemoveSpeakerRequest"/>
  </message>
  <message name="ProcessPlaybackCommandRequest">
    <part element="types:CallPlaybackCommand" name="ProcessPlaybackCommandRequest"/>
  </message>
  <message name="SetSoundScapeSourceLayoutRequest">
    <part element="types:CallSetSoundScapeSourceLayout" name="SetSoundScapeSourceLayoutRequest"/>
  </message>
  <message name="stopRequest">
    <part element="types:Stop" name="stopRequest"/>
  </message>
  <message name="functionRequest">
    <part element="types:functionRequest" name="functionRequest"/>
  </message>
  <message name="finishMessage">
    <part element="rs:RegisterUserResponse" name="RegisterUserResponse"/>
  </message>
  <message name="uploadSongCallbackhMessage">
    <part element="types:UploadSongCallback" name="uploadSongCallbackhMessage"/>
  </message>
  <message name="deleteSongCallbackhMessage">
    <part element="types:DeleteSongCallback" name="deleteSongCallbackhMessage"/>
  </message>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		PORT TYPE DEFINITION - A port type groups a set of operations into a logical 
		service unit. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--portType implemented by the DistributedSoundScape BPEL process-->
  <portType name="DistributedSoundScape">
    <operation name="RegisterUserFunction">
      <input message="tns:RegisterUserRequest"/>
    </operation>
    <operation name="UploadSongFunction">
      <input message="tns:UploadSongRequest"/>
    </operation>
    <operation name="DeleteSongFunction">
      <input message="tns:DeleteSongRequest"/>
    </operation>
    <operation name="IsSongLoadedFunction">
      <input message="tns:IsSongLoadedRequest"/>
    </operation>
    <operation name="AddSpeakerFunction">
      <input message="tns:AddSpeakerRequest"/>
    </operation>
    <operation name="RemoveSpeakerFunction">
      <input message="tns:RemoveSpeakerRequest"/>
    </operation>
    <operation name="ProcessPlaybackCommandFunction">
      <input message="tns:ProcessPlaybackCommandRequest"/>
    </operation>
    <operation name="SetSoundScapeSourceLayoutFunction">
      <input message="tns:SetSoundScapeSourceLayoutRequest"/>
    </operation>
    <operation name="stopFunction">
      <input message="tns:stopRequest"/>
    </operation>
    <operation name="finishFunction">
      <input message="tns:finishMessage"/>
    </operation>
  </portType>
  <portType name="DistributedSoundScapeCallback">
    <operation name="requestFunction">
      <input message="tns:functionRequest"/>
    </operation>
    <operation name="uploadSongCallbackFunction">
      <input message="tns:uploadSongCallbackhMessage"/>
    </operation>
    <operation name="deleteSongCallbackFunction">
      <input message="tns:deleteSongCallbackhMessage"/>
    </operation>
  </portType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		PARTNER LINK TYPE DEFINITION ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <plnk:partnerLinkType name="DistributedSoundScape">
    <plnk:role name="DistributedSoundScapeProvider" portType="tns:DistributedSoundScape"/>
    <plnk:role name="DistributedSoundScapeRequester" portType="tns:DistributedSoundScapeCallback"/>
  </plnk:partnerLinkType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		BINDING DEFINITION - Defines the message format and protocol details for 
		a web service. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <binding name="DistributedSoundScapeBinding" type="tns:DistributedSoundScape">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="RegisterUserFunction">
      <soap:operation soapAction="DistributedSoundScape/RegisterUserFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="UploadSongFunction">
      <soap:operation soapAction="DistributedSoundScape/UploadSongFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="DeleteSongFunction">
      <soap:operation soapAction="DistributedSoundScape/DeleteSongFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="IsSongLoadedFunction">
      <soap:operation soapAction="DistributedSoundScape/IsSongLoadedFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="AddSpeakerFunction">
      <soap:operation soapAction="DistributedSoundScape/AddSpeakerFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="RemoveSpeakerFunction">
      <soap:operation soapAction="DistributedSoundScape/RemoveSpeakerFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="ProcessPlaybackCommandFunction">
      <soap:operation soapAction="DistributedSoundScape/ProcessPlaybackCommandFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="SetSoundScapeSourceLayoutFunction">
      <soap:operation soapAction="DistributedSoundScape/SetSoundScapeSourceLayoutFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="stopFunction">
      <soap:operation soapAction="DistributedSoundScape/stopFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="finishFunction">
      <soap:operation soapAction="DistributedSoundScape/finishFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
  </binding>
  <binding name="DistributedSoundScapeCallbackBinding" type="tns:DistributedSoundScapeCallback">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="requestFunction">
      <soap:operation soapAction="DistributedSoundScape/requestFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="uploadSongCallbackFunction">
      <soap:operation soapAction="DistributedSoundScape/uploadSongCallbackFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="deleteSongCallbackFunction">
      <soap:operation soapAction="DistributedSoundScape/deleteSongCallbackFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
  </binding>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		SERVICE DEFINITION - A service groups a set of ports into a service unit. 
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <service name="DistributedSoundScapeServiceCallback">
    <port binding="tns:DistributedSoundScapeCallbackBinding" name="DistributedSoundScapePortCallbackPort">
      <soap:address location="http://localhost:8182/onResult"/>
    </port>
  </service>
  <service name="DistributedSoundScapeService">
    <port binding="tns:DistributedSoundScapeBinding" name="DistributedSoundScapePort">
      <soap:address location="http://localhost:8080/ode/processes/DistributedSoundScape"/>
    </port>
  </service>
</definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\UploadService.wsdl</con:url>
        <con:content><![CDATA[<wsdl:definitions name="UploadService" targetNamespace="http://www.example.org/UploadService/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.example.org/UploadService/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:types="http://www.example.org/UploadServiceElements/" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
  <wsdl:types>
    <xsd:schema targetNamespace="http://www.example.org/UploadService/">
      <xsd:import namespace="http://www.example.org/UploadServiceElements/" schemaLocation="schemas/type-definitions/UploadServiceElements.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <plnk:partnerLinkType name="UploadServiceLinkType">
    <plnk:role name="uploadProvider" portType="tns:UploadService">
      <plnk:portType name="tns:UploadService"/>
    </plnk:role>
    <plnk:role name="uploadRequester" portType="tns:UploadCallbackService">
      <plnk:portType name="tns:UploadCallbackService"/>
    </plnk:role>
  </plnk:partnerLinkType>
  <!--Provider-->
  <wsdl:message name="UploadSongRequest">
    <wsdl:part name="Request" element="types:UploadSongRequest"/>
  </wsdl:message>
  <wsdl:message name="DeleteSongRequest">
    <wsdl:part name="Request" element="types:DeleteSongRequest"/>
  </wsdl:message>
  <wsdl:message name="IsSongLoadedRequest">
    <wsdl:part name="Request" element="types:IsSongLoadedRequest"/>
  </wsdl:message>
  <wsdl:message name="IsSongLoadedResponse">
    <wsdl:part name="Response" element="types:IsSongLoadedResponse"/>
  </wsdl:message>
  <!--Callback-->
  <wsdl:message name="UploadSongResponse">
    <wsdl:part name="Response" element="types:UploadSongResponse"/>
  </wsdl:message>
  <wsdl:message name="DeleteSongResponse">
    <wsdl:part name="Response" element="types:DeleteSongResponse"/>
  </wsdl:message>
  <wsdl:message name="ErrorMessage">
    <wsdl:part name="ErrorMessage" element="types:ErrorMessage"/>
  </wsdl:message>
  <!--Provider-->
  <wsdl:portType name="UploadService">
    <wsdl:operation name="UploadSong">
      <wsdl:input message="tns:UploadSongRequest"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteSong">
      <wsdl:input message="tns:DeleteSongRequest"/>
    </wsdl:operation>
    <wsdl:operation name="IsSongLoaded">
      <wsdl:input message="tns:IsSongLoadedRequest"/>
      <wsdl:output message="tns:IsSongLoadedResponse"/>
      <wsdl:fault name="Error" message="tns:ErrorMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--Callback-->
  <wsdl:portType name="UploadCallbackService">
    <wsdl:operation name="UploadSongCallback">
      <wsdl:input message="tns:UploadSongResponse"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteSongCallback">
      <wsdl:input message="tns:DeleteSongResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--Provider-->
  <wsdl:binding name="UploadServiceSOAP" type="tns:UploadService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="UploadSong">
      <soap:operation soapAction="http://www.example.org/UploadService/UploadSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="DeleteSong">
      <soap:operation soapAction="http://www.example.org/UploadService/DeleteSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="IsSongLoaded">
      <soap:operation soapAction="http://www.example.org/UploadService/IsSongLoaded"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Error">
        <soap:fault name="Error" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <!--Callback-->
  <wsdl:binding name="UploadCallbackServiceSOAP" type="tns:UploadCallbackService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="UploadSongCallback">
      <soap:operation soapAction="http://www.example.org/UploadCallbackService/UploadSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="DeleteSongCallback">
      <soap:operation soapAction="http://www.example.org/UploadCallbackService/DeleteSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <!--Provider-->
  <wsdl:service name="UploadService">
    <wsdl:port binding="tns:UploadServiceSOAP" name="UploadServiceSOAP">
      <soap:address location="http://localhost:9080/DistributedSoundScape/services/UploadService/"/>
    </wsdl:port>
  </wsdl:service>
  <!--Callback-->
  <wsdl:service name="UploadCallbackService">
    <wsdl:port binding="tns:UploadCallbackServiceSOAP" name="UploadCallbackServiceSOAP">
      <soap:address location="http://localhost:8080/ode/processes/UploadCallbackService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\UploadServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/UploadServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/UploadServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="UploadSongRequest" type="tns:UploadSongRequest"/>
  <element name="DeleteSongRequest" type="tns:DeleteSongRequest"/>
  <element name="IsSongLoadedRequest" type="tns:IsSongLoadedRequest"></element>
  <element name="IsSongLoadedResponse" type="boolean"/>
  <element name="DeleteSongResponse" type="tns:DeleteSongResponse"/>
  <element name="UploadSongResponse" type="tns:UploadSongResponse"/>
  <complexType name="DeleteSongRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="IsSongLoadedRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="UploadSongRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="ErrorMessage" type="string"/>
  <complexType name="UploadSongResponse">
    <sequence>
      <element name="conversationId" type="string"/>
      <element name="response" type="types:ASyncResponse"/>
    </sequence>
  </complexType>
  <complexType name="DeleteSongResponse">
    <sequence>
      <element name="response" type="types:ASyncResponse"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\SoundScapeDataTypes.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/SoundScapeDataTypes/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/SoundScapeDataTypes/">
  <simpleType name="SoundscapeId">
    <restriction base="unsignedInt"/>
  </simpleType>
  <simpleType name="Port">
    <restriction base="unsignedShort"/>
  </simpleType>
  <simpleType name="IPv4Address">
    <annotation>
      <documentation>IPv4 address in dot-decimal notation. Equivalent to [0-255].[0-255].[0-255].[0-255]</documentation>
    </annotation>
    <restriction base="string">
      <pattern value="((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"/>
    </restriction>
  </simpleType>
  <complexType name="Location">
    <sequence>
      <element name="x" type="short" maxOccurs="1" minOccurs="1"/>
      <element name="y" type="short" maxOccurs="1" minOccurs="1"/>
      <element name="z" type="short" maxOccurs="1" minOccurs="1"/>
    </sequence>
  </complexType>
  <complexType name="GeneralDevice">
    <sequence>
      <element name="IpAddress" type="tns:IPv4Address"/>
      <element name="Port" type="tns:Port"/>
      <element name="SoundScapeId" type="tns:SoundscapeId"/>
    </sequence>
  </complexType>
  <complexType name="SpeakerDevice">
    <sequence>
      <element name="GeneralDevice" type="tns:GeneralDevice"/>
      <element name="Location" type="tns:Location"/>
    </sequence>
  </complexType>
  <complexType name="SpeakerDeviceArray">
    <sequence>
      <element name="SpeakerDevice" type="tns:SpeakerDevice" maxOccurs="unbounded" minOccurs="0"/>
    </sequence>
  </complexType>
  <complexType name="Link">
    <sequence>
      <element name="Type" type="tns:LinkType"/>
      <element name="Address" type="string"/>
    </sequence>
  </complexType>
  <simpleType name="LinkType">
    <restriction base="string">
      <enumeration value="ftp"/>
      <enumeration value="http"/>
      <enumeration value="https"/>
    </restriction>
  </simpleType>
  <simpleType name="ChannelNumber">
    <restriction base="unsignedShort"/>
  </simpleType>
  <simpleType name="VolumeLevel">
    <restriction base="double">
      <minInclusive value="0"/>
    </restriction>
  </simpleType>
  <complexType name="ChannelLayout">
    <sequence>
      <element name="ChannelNumber" type="tns:ChannelNumber"/>
      <element name="Location" type="tns:Location"/>
      <element name="VolumeLevel" type="tns:VolumeLevel"/>
    </sequence>
  </complexType>
  <complexType name="SoundScapeSourceLayout">
    <sequence>
      <element name="ChannelLayouts" type="tns:ChannelLayout" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <simpleType name="PlaybackCommand">
    <restriction base="string"/>
  </simpleType>
  <complexType name="ASyncResponse">
    <choice>
      <element name="Successfull" type="boolean"/>
      <element name="ErrorMessage" type="string"/>
    </choice>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\RegistrationServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/RegistrationServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/RegistrationServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="RegisterUserRequest" type="tns:RegisterUserRequest"></element>
  <element name="RegisterUserResponse" type="boolean"/>
  <element name="GetSpeakersRequest" type="tns:GetSpeakersRequest"/>
  <element name="GetSpeakersResponse" type="tns:GetSpeakersResponse"></element>
  <element name="SetSpeakerLocationRequest" type="tns:SetSpeakerLocationRequest"></element>
  <complexType name="SetSpeakerLocationRequest">
    <sequence>
      <element name="SpeakerDevice" type="types:SpeakerDevice"/>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <complexType name="GetSpeakersRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <complexType name="GetSpeakersResponse">
    <sequence>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="RegisterUserRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="SetSpeakerLocationResponse" type="boolean"/>
  <complexType name="RemoveUserRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="RemoveUserRequest" type="tns:RemoveUserRequest"/>
  <element name="ErrorMessage" type="string"/>
  <element name="AddSpeakerRequest" type="tns:AddSpeakerRequest"/>
  <element name="RemoveSpeakerRequest" type="tns:RemoveSpeakerRequest"></element>
  <complexType name="AddSpeakerRequest">
    <sequence>
      <element name="Speaker" type="types:SpeakerDevice"/>
    </sequence>
  </complexType>
  <complexType name="RemoveSpeakerRequest">
    <sequence>
      <element name="Speaker" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="AddSpeakerResponse" type="boolean"/>
  <element name="RemoveSpeakerResponse" type="boolean"/>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\ControlServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/ControlServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/ControlServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="SetSoundScapeSourceLayoutRequest" type="tns:SetSoundScapeSourceLayoutRequest"></element>
  <complexType name="SetSoundScapeSourceLayoutRequest">
    <sequence>
      <element name="SoundScapeSourceLayout" type="types:SoundScapeSourceLayout"></element>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <element name="SetSoundScapeSourceLayoutResponse" type="boolean"/>
  <element name="ProcessPlaybackCommandRequest" type="tns:ProcessPlaybackCommandRequest"></element>
  <element name="ProcessPlaybackCommandResponse" type="boolean"/>
  <element name="ErrorMessage" type="string"/>
  <complexType name="ProcessPlaybackCommandRequest">
    <sequence>
      <element name="Command" type="types:PlaybackCommand"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\OrchestratorElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/OrchestratorElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/OrchestratorElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/" xmlns:pref="http://www.example.org/RegistrationServiceElements/" xmlns:pref1="http://www.example.org/ControlServiceElements/" xmlns:pref2="http://www.example.org/UploadServiceElements/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"></import>
  <import schemaLocation="RegistrationServiceElements.xsd" namespace="http://www.example.org/RegistrationServiceElements/"></import>
  <import schemaLocation="ControlServiceElements.xsd" namespace="http://www.example.org/ControlServiceElements/"></import>
  <import schemaLocation="UploadServiceElements.xsd" namespace="http://www.example.org/UploadServiceElements/"/>
  <complexType name="DeleteSongCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="IsSongLoadedCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="UploadSongCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="ConfirmRegistrationMessage" type="tns:RegisterUserResponse"></element>
  <complexType name="RegisterUserResponse">
    <sequence>
      <element name="RegisterUserReponse" type="boolean"/>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="Stop" type="tns:conversationId"/>
  <simpleType name="conversationId">
    <restriction base="string"/>
  </simpleType>
  <element name="CallUploadSong" type="tns:UploadSongCall"/>
  <element name="CallDeleteSong" type="tns:DeleteSongCall"/>
  <element name="CallIsSongLoaded" type="tns:IsSongLoadedCall"/>
  <element name="CallAddSpeaker" type="tns:AddSpeakerCall"/>
  <complexType name="AddSpeakerCall">
    <sequence>
      <element name="AddSpeakerRequest" type="pref:AddSpeakerRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="CallRemoveSpeaker" type="tns:CallRemoveSpeaker"/>
  <element name="CallMoveSpeaker" type="tns:CallMoveSpeaker"/>
  <element name="CallSetSoundScapeSourceLayout" type="tns:CallSetSoundScapeSourceLayout"></element>
  <element name="CallPlaybackCommand" type="tns:CallPlaybackCommand"></element>
  <complexType name="CallMoveSpeaker">
    <sequence>
      <element name="setSpeakerLocationRequest" type="pref:SetSpeakerLocationRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallPlaybackCommand">
    <sequence>
      <element name="playbackCommand" type="pref1:ProcessPlaybackCommandRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallRemoveSpeaker">
    <sequence>
      <element name="removeSpeakerRequest" type="pref:RemoveSpeakerRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallSetSoundScapeSourceLayout">
    <sequence>
      <element name="setSoundScapeSourceLayoutRequest" type="pref1:SetSoundScapeSourceLayoutRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="functionRequest" type="tns:conversationId"/>
  <element name="UploadSongCallback" type="pref2:UploadSongResponse"></element>
  <element name="DeleteSongCallback" type="pref2:DeleteSongResponse"></element>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>http://localhost:9080/DistributedSoundScape/services/UploadService/</con:endpoint>
    </con:endpoints>
    <con:operation id="99b69a52-0113-4c6d-badf-208ea03a7aa3" isOneWay="false" action="http://www.example.org/UploadService/DeleteSong" name="DeleteSong" bindingOperationName="DeleteSong" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="8c370bb2-b219-45f5-8740-781e34823268" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:9080/DistributedSoundScape/services/UploadService/</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:upl="http://www.example.org/UploadServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <upl:DeleteSongRequest>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
      </upl:DeleteSongRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/UploadService/DeleteSong"/>
      </con:call>
    </con:operation>
    <con:operation id="91de5331-e71e-43ed-92c8-62607ee7b14c" isOneWay="false" action="http://www.example.org/UploadService/IsSongLoaded" name="IsSongLoaded" bindingOperationName="IsSongLoaded" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="92e1c266-138b-4398-b7da-c252b4cec05f" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:9080/DistributedSoundScape/services/UploadService/</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:upl="http://www.example.org/UploadServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <upl:IsSongLoadedRequest>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
      </upl:IsSongLoadedRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/UploadService/IsSongLoaded"/>
      </con:call>
    </con:operation>
    <con:operation id="7d37f590-825f-436c-b397-22927ddce3a4" isOneWay="false" action="http://www.example.org/UploadService/UploadSong" name="UploadSong" bindingOperationName="UploadSong" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="208183da-1f47-4142-8fdc-f58f89193d67" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:9080/DistributedSoundScape/services/UploadService/</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:upl="http://www.example.org/UploadServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <upl:UploadSongRequest>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
         <conversationId>?</conversationId>\r
      </upl:UploadSongRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/UploadService/UploadSong"/>
      </con:call>
    </con:operation>
  </con:interface>
  <con:interface xsi:type="con:WsdlInterface" id="1f71e564-341b-4549-b986-07dda30cd238" wsaVersion="NONE" name="DistributedSoundScapeCallbackBinding" type="wsdl" bindingName="{DistributedSoundScape}DistributedSoundScapeCallbackBinding" soapVersion="1_1" anonymous="optional" definition="bpelContent/DistributedSoundScapeArtifacts.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="file:/B:/SOA/workspace/DistributedSoundScapeBPEL/bpelContent/DistributedSoundScapeArtifacts.wsdl">
      <con:part>
        <con:url>file:/B:/SOA/workspace/DistributedSoundScapeBPEL/bpelContent/DistributedSoundScapeArtifacts.wsdl</con:url>
        <con:content><![CDATA[<definitions name="DistributedSoundScape" targetNamespace="DistributedSoundScape" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:cs="http://www.example.org/ControlServiceElements/" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:rs="http://www.example.org/RegistrationServiceElements/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ssdt="http://www.example.org/SoundScapeDataTypes/" xmlns:tns="DistributedSoundScape" xmlns:types="http://www.example.org/OrchestratorElements/" xmlns:us="http://www.example.org/UploadServiceElements/" xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop" xmlns:wsdl="http://www.example.org/UploadService/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		TYPE DEFINITION - List of types participating in this BPEL process The BPEL 
		Designer will generate default request and response types but you can define 
		or import any XML Schema type and use them as part of the message types. 
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <vprop:property name="conversationId" type="xsd:string"/>
  <vprop:propertyAlias messageType="wsdl:UploadSongRequest" part="Request" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="wsdl:UploadSongResponse" part="Response" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="tns:functionRequest" part="functionRequest" propertyName="tns:conversationId"/>
  <vprop:propertyAlias messageType="tns:UploadSongRequest" part="UploadSongRequest" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="tns:stopRequest" part="stopRequest" propertyName="tns:conversationId"/>
  <import location="UploadService.wsdl" namespace="http://www.example.org/UploadService/"/>
  <types>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="DistributedSoundScape" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://www.example.org/RegistrationServiceElements/" schemaLocation="schemas/type-definitions/RegistrationServiceElements.xsd"/>
      <import namespace="http://www.example.org/ControlServiceElements/" schemaLocation="schemas/type-definitions/ControlServiceElements.xsd"/>
      <import namespace="http://www.example.org/UploadServiceElements/" schemaLocation="schemas/type-definitions/UploadServiceElements.xsd"/>
      <import namespace="http://www.example.org/OrchestratorElements/" schemaLocation="schemas/type-definitions/OrchestratorElements.xsd"/>
      <import namespace="http://www.example.org/SoundScapeDataTypes/" schemaLocation="schemas/type-definitions/SoundScapeDataTypes.xsd"/>
    </schema>
  </types>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		MESSAGE TYPE DEFINITION - Definition of the message types used as part of 
		the port type defintions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <message name="RegisterUserRequest">
    <part element="rs:RegisterUserRequest" name="RegisterUserRequest"/>
  </message>
  <message name="UploadSongRequest">
    <part element="types:CallUploadSong" name="UploadSongRequest"/>
  </message>
  <message name="DeleteSongRequest">
    <part element="types:CallDeleteSong" name="DeleteSongRequest"/>
  </message>
  <message name="IsSongLoadedRequest">
    <part element="types:CallIsSongLoaded" name="IsSongLoadedRequest"/>
  </message>
  <message name="AddSpeakerRequest">
    <part element="types:CallAddSpeaker" name="AddSpeakerRequest"/>
  </message>
  <message name="RemoveSpeakerRequest">
    <part element="types:CallRemoveSpeaker" name="RemoveSpeakerRequest"/>
  </message>
  <message name="ProcessPlaybackCommandRequest">
    <part element="types:CallPlaybackCommand" name="ProcessPlaybackCommandRequest"/>
  </message>
  <message name="SetSoundScapeSourceLayoutRequest">
    <part element="types:CallSetSoundScapeSourceLayout" name="SetSoundScapeSourceLayoutRequest"/>
  </message>
  <message name="stopRequest">
    <part element="types:Stop" name="stopRequest"/>
  </message>
  <message name="functionRequest">
    <part element="types:functionRequest" name="functionRequest"/>
  </message>
  <message name="finishMessage">
    <part element="rs:RegisterUserResponse" name="RegisterUserResponse"/>
  </message>
  <message name="uploadSongCallbackhMessage">
    <part element="types:UploadSongCallback" name="uploadSongCallbackhMessage"/>
  </message>
  <message name="deleteSongCallbackhMessage">
    <part element="types:DeleteSongCallback" name="deleteSongCallbackhMessage"/>
  </message>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		PORT TYPE DEFINITION - A port type groups a set of operations into a logical 
		service unit. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--portType implemented by the DistributedSoundScape BPEL process-->
  <portType name="DistributedSoundScape">
    <operation name="RegisterUserFunction">
      <input message="tns:RegisterUserRequest"/>
    </operation>
    <operation name="UploadSongFunction">
      <input message="tns:UploadSongRequest"/>
    </operation>
    <operation name="DeleteSongFunction">
      <input message="tns:DeleteSongRequest"/>
    </operation>
    <operation name="IsSongLoadedFunction">
      <input message="tns:IsSongLoadedRequest"/>
    </operation>
    <operation name="AddSpeakerFunction">
      <input message="tns:AddSpeakerRequest"/>
    </operation>
    <operation name="RemoveSpeakerFunction">
      <input message="tns:RemoveSpeakerRequest"/>
    </operation>
    <operation name="ProcessPlaybackCommandFunction">
      <input message="tns:ProcessPlaybackCommandRequest"/>
    </operation>
    <operation name="SetSoundScapeSourceLayoutFunction">
      <input message="tns:SetSoundScapeSourceLayoutRequest"/>
    </operation>
    <operation name="stopFunction">
      <input message="tns:stopRequest"/>
    </operation>
    <operation name="finishFunction">
      <input message="tns:finishMessage"/>
    </operation>
  </portType>
  <portType name="DistributedSoundScapeCallback">
    <operation name="requestFunction">
      <input message="tns:functionRequest"/>
    </operation>
    <operation name="uploadSongCallbackFunction">
      <input message="tns:uploadSongCallbackhMessage"/>
    </operation>
    <operation name="deleteSongCallbackFunction">
      <input message="tns:deleteSongCallbackhMessage"/>
    </operation>
  </portType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		PARTNER LINK TYPE DEFINITION ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <plnk:partnerLinkType name="DistributedSoundScape">
    <plnk:role name="DistributedSoundScapeProvider" portType="tns:DistributedSoundScape"/>
    <plnk:role name="DistributedSoundScapeRequester" portType="tns:DistributedSoundScapeCallback"/>
  </plnk:partnerLinkType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		BINDING DEFINITION - Defines the message format and protocol details for 
		a web service. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <binding name="DistributedSoundScapeBinding" type="tns:DistributedSoundScape">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="RegisterUserFunction">
      <soap:operation soapAction="DistributedSoundScape/RegisterUserFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="UploadSongFunction">
      <soap:operation soapAction="DistributedSoundScape/UploadSongFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="DeleteSongFunction">
      <soap:operation soapAction="DistributedSoundScape/DeleteSongFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="IsSongLoadedFunction">
      <soap:operation soapAction="DistributedSoundScape/IsSongLoadedFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="AddSpeakerFunction">
      <soap:operation soapAction="DistributedSoundScape/AddSpeakerFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="RemoveSpeakerFunction">
      <soap:operation soapAction="DistributedSoundScape/RemoveSpeakerFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="ProcessPlaybackCommandFunction">
      <soap:operation soapAction="DistributedSoundScape/ProcessPlaybackCommandFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="SetSoundScapeSourceLayoutFunction">
      <soap:operation soapAction="DistributedSoundScape/SetSoundScapeSourceLayoutFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="stopFunction">
      <soap:operation soapAction="DistributedSoundScape/stopFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="finishFunction">
      <soap:operation soapAction="DistributedSoundScape/finishFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
  </binding>
  <binding name="DistributedSoundScapeCallbackBinding" type="tns:DistributedSoundScapeCallback">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="requestFunction">
      <soap:operation soapAction="DistributedSoundScape/requestFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="uploadSongCallbackFunction">
      <soap:operation soapAction="DistributedSoundScape/uploadSongCallbackFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="deleteSongCallbackFunction">
      <soap:operation soapAction="DistributedSoundScape/deleteSongCallbackFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
  </binding>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		SERVICE DEFINITION - A service groups a set of ports into a service unit. 
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <service name="DistributedSoundScapeServiceCallback">
    <port binding="tns:DistributedSoundScapeCallbackBinding" name="DistributedSoundScapePortCallbackPort">
      <soap:address location="http://localhost:8182/onResult"/>
    </port>
  </service>
  <service name="DistributedSoundScapeService">
    <port binding="tns:DistributedSoundScapeBinding" name="DistributedSoundScapePort">
      <soap:address location="http://localhost:8080/ode/processes/DistributedSoundScape"/>
    </port>
  </service>
</definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\UploadService.wsdl</con:url>
        <con:content><![CDATA[<wsdl:definitions name="UploadService" targetNamespace="http://www.example.org/UploadService/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.example.org/UploadService/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:types="http://www.example.org/UploadServiceElements/" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
  <wsdl:types>
    <xsd:schema targetNamespace="http://www.example.org/UploadService/">
      <xsd:import namespace="http://www.example.org/UploadServiceElements/" schemaLocation="schemas/type-definitions/UploadServiceElements.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <plnk:partnerLinkType name="UploadServiceLinkType">
    <plnk:role name="uploadProvider" portType="tns:UploadService">
      <plnk:portType name="tns:UploadService"/>
    </plnk:role>
    <plnk:role name="uploadRequester" portType="tns:UploadCallbackService">
      <plnk:portType name="tns:UploadCallbackService"/>
    </plnk:role>
  </plnk:partnerLinkType>
  <!--Provider-->
  <wsdl:message name="UploadSongRequest">
    <wsdl:part name="Request" element="types:UploadSongRequest"/>
  </wsdl:message>
  <wsdl:message name="DeleteSongRequest">
    <wsdl:part name="Request" element="types:DeleteSongRequest"/>
  </wsdl:message>
  <wsdl:message name="IsSongLoadedRequest">
    <wsdl:part name="Request" element="types:IsSongLoadedRequest"/>
  </wsdl:message>
  <wsdl:message name="IsSongLoadedResponse">
    <wsdl:part name="Response" element="types:IsSongLoadedResponse"/>
  </wsdl:message>
  <!--Callback-->
  <wsdl:message name="UploadSongResponse">
    <wsdl:part name="Response" element="types:UploadSongResponse"/>
  </wsdl:message>
  <wsdl:message name="DeleteSongResponse">
    <wsdl:part name="Response" element="types:DeleteSongResponse"/>
  </wsdl:message>
  <wsdl:message name="ErrorMessage">
    <wsdl:part name="ErrorMessage" element="types:ErrorMessage"/>
  </wsdl:message>
  <!--Provider-->
  <wsdl:portType name="UploadService">
    <wsdl:operation name="UploadSong">
      <wsdl:input message="tns:UploadSongRequest"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteSong">
      <wsdl:input message="tns:DeleteSongRequest"/>
    </wsdl:operation>
    <wsdl:operation name="IsSongLoaded">
      <wsdl:input message="tns:IsSongLoadedRequest"/>
      <wsdl:output message="tns:IsSongLoadedResponse"/>
      <wsdl:fault name="Error" message="tns:ErrorMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--Callback-->
  <wsdl:portType name="UploadCallbackService">
    <wsdl:operation name="UploadSongCallback">
      <wsdl:input message="tns:UploadSongResponse"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteSongCallback">
      <wsdl:input message="tns:DeleteSongResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--Provider-->
  <wsdl:binding name="UploadServiceSOAP" type="tns:UploadService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="UploadSong">
      <soap:operation soapAction="http://www.example.org/UploadService/UploadSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="DeleteSong">
      <soap:operation soapAction="http://www.example.org/UploadService/DeleteSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="IsSongLoaded">
      <soap:operation soapAction="http://www.example.org/UploadService/IsSongLoaded"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Error">
        <soap:fault name="Error" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <!--Callback-->
  <wsdl:binding name="UploadCallbackServiceSOAP" type="tns:UploadCallbackService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="UploadSongCallback">
      <soap:operation soapAction="http://www.example.org/UploadCallbackService/UploadSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="DeleteSongCallback">
      <soap:operation soapAction="http://www.example.org/UploadCallbackService/DeleteSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <!--Provider-->
  <wsdl:service name="UploadService">
    <wsdl:port binding="tns:UploadServiceSOAP" name="UploadServiceSOAP">
      <soap:address location="http://localhost:9080/DistributedSoundScape/services/UploadService/"/>
    </wsdl:port>
  </wsdl:service>
  <!--Callback-->
  <wsdl:service name="UploadCallbackService">
    <wsdl:port binding="tns:UploadCallbackServiceSOAP" name="UploadCallbackServiceSOAP">
      <soap:address location="http://localhost:8080/ode/processes/UploadCallbackService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\UploadServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/UploadServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/UploadServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="UploadSongRequest" type="tns:UploadSongRequest"/>
  <element name="DeleteSongRequest" type="tns:DeleteSongRequest"/>
  <element name="IsSongLoadedRequest" type="tns:IsSongLoadedRequest"></element>
  <element name="IsSongLoadedResponse" type="boolean"/>
  <element name="DeleteSongResponse" type="tns:DeleteSongResponse"/>
  <element name="UploadSongResponse" type="tns:UploadSongResponse"/>
  <complexType name="DeleteSongRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="IsSongLoadedRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="UploadSongRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="ErrorMessage" type="string"/>
  <complexType name="UploadSongResponse">
    <sequence>
      <element name="conversationId" type="string"/>
      <element name="response" type="types:ASyncResponse"/>
    </sequence>
  </complexType>
  <complexType name="DeleteSongResponse">
    <sequence>
      <element name="response" type="types:ASyncResponse"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\SoundScapeDataTypes.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/SoundScapeDataTypes/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/SoundScapeDataTypes/">
  <simpleType name="SoundscapeId">
    <restriction base="unsignedInt"/>
  </simpleType>
  <simpleType name="Port">
    <restriction base="unsignedShort"/>
  </simpleType>
  <simpleType name="IPv4Address">
    <annotation>
      <documentation>IPv4 address in dot-decimal notation. Equivalent to [0-255].[0-255].[0-255].[0-255]</documentation>
    </annotation>
    <restriction base="string">
      <pattern value="((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"/>
    </restriction>
  </simpleType>
  <complexType name="Location">
    <sequence>
      <element name="x" type="short" maxOccurs="1" minOccurs="1"/>
      <element name="y" type="short" maxOccurs="1" minOccurs="1"/>
      <element name="z" type="short" maxOccurs="1" minOccurs="1"/>
    </sequence>
  </complexType>
  <complexType name="GeneralDevice">
    <sequence>
      <element name="IpAddress" type="tns:IPv4Address"/>
      <element name="Port" type="tns:Port"/>
      <element name="SoundScapeId" type="tns:SoundscapeId"/>
    </sequence>
  </complexType>
  <complexType name="SpeakerDevice">
    <sequence>
      <element name="GeneralDevice" type="tns:GeneralDevice"/>
      <element name="Location" type="tns:Location"/>
    </sequence>
  </complexType>
  <complexType name="SpeakerDeviceArray">
    <sequence>
      <element name="SpeakerDevice" type="tns:SpeakerDevice" maxOccurs="unbounded" minOccurs="0"/>
    </sequence>
  </complexType>
  <complexType name="Link">
    <sequence>
      <element name="Type" type="tns:LinkType"/>
      <element name="Address" type="string"/>
    </sequence>
  </complexType>
  <simpleType name="LinkType">
    <restriction base="string">
      <enumeration value="ftp"/>
      <enumeration value="http"/>
      <enumeration value="https"/>
    </restriction>
  </simpleType>
  <simpleType name="ChannelNumber">
    <restriction base="unsignedShort"/>
  </simpleType>
  <simpleType name="VolumeLevel">
    <restriction base="double">
      <minInclusive value="0"/>
    </restriction>
  </simpleType>
  <complexType name="ChannelLayout">
    <sequence>
      <element name="ChannelNumber" type="tns:ChannelNumber"/>
      <element name="Location" type="tns:Location"/>
      <element name="VolumeLevel" type="tns:VolumeLevel"/>
    </sequence>
  </complexType>
  <complexType name="SoundScapeSourceLayout">
    <sequence>
      <element name="ChannelLayouts" type="tns:ChannelLayout" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <simpleType name="PlaybackCommand">
    <restriction base="string"/>
  </simpleType>
  <complexType name="ASyncResponse">
    <choice>
      <element name="Successfull" type="boolean"/>
      <element name="ErrorMessage" type="string"/>
    </choice>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\RegistrationServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/RegistrationServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/RegistrationServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="RegisterUserRequest" type="tns:RegisterUserRequest"></element>
  <element name="RegisterUserResponse" type="boolean"/>
  <element name="GetSpeakersRequest" type="tns:GetSpeakersRequest"/>
  <element name="GetSpeakersResponse" type="tns:GetSpeakersResponse"></element>
  <element name="SetSpeakerLocationRequest" type="tns:SetSpeakerLocationRequest"></element>
  <complexType name="SetSpeakerLocationRequest">
    <sequence>
      <element name="SpeakerDevice" type="types:SpeakerDevice"/>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <complexType name="GetSpeakersRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <complexType name="GetSpeakersResponse">
    <sequence>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="RegisterUserRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="SetSpeakerLocationResponse" type="boolean"/>
  <complexType name="RemoveUserRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="RemoveUserRequest" type="tns:RemoveUserRequest"/>
  <element name="ErrorMessage" type="string"/>
  <element name="AddSpeakerRequest" type="tns:AddSpeakerRequest"/>
  <element name="RemoveSpeakerRequest" type="tns:RemoveSpeakerRequest"></element>
  <complexType name="AddSpeakerRequest">
    <sequence>
      <element name="Speaker" type="types:SpeakerDevice"/>
    </sequence>
  </complexType>
  <complexType name="RemoveSpeakerRequest">
    <sequence>
      <element name="Speaker" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="AddSpeakerResponse" type="boolean"/>
  <element name="RemoveSpeakerResponse" type="boolean"/>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\ControlServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/ControlServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/ControlServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="SetSoundScapeSourceLayoutRequest" type="tns:SetSoundScapeSourceLayoutRequest"></element>
  <complexType name="SetSoundScapeSourceLayoutRequest">
    <sequence>
      <element name="SoundScapeSourceLayout" type="types:SoundScapeSourceLayout"></element>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <element name="SetSoundScapeSourceLayoutResponse" type="boolean"/>
  <element name="ProcessPlaybackCommandRequest" type="tns:ProcessPlaybackCommandRequest"></element>
  <element name="ProcessPlaybackCommandResponse" type="boolean"/>
  <element name="ErrorMessage" type="string"/>
  <complexType name="ProcessPlaybackCommandRequest">
    <sequence>
      <element name="Command" type="types:PlaybackCommand"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\OrchestratorElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/OrchestratorElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/OrchestratorElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/" xmlns:pref="http://www.example.org/RegistrationServiceElements/" xmlns:pref1="http://www.example.org/ControlServiceElements/" xmlns:pref2="http://www.example.org/UploadServiceElements/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"></import>
  <import schemaLocation="RegistrationServiceElements.xsd" namespace="http://www.example.org/RegistrationServiceElements/"></import>
  <import schemaLocation="ControlServiceElements.xsd" namespace="http://www.example.org/ControlServiceElements/"></import>
  <import schemaLocation="UploadServiceElements.xsd" namespace="http://www.example.org/UploadServiceElements/"/>
  <complexType name="DeleteSongCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="IsSongLoadedCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="UploadSongCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="ConfirmRegistrationMessage" type="tns:RegisterUserResponse"></element>
  <complexType name="RegisterUserResponse">
    <sequence>
      <element name="RegisterUserReponse" type="boolean"/>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="Stop" type="tns:conversationId"/>
  <simpleType name="conversationId">
    <restriction base="string"/>
  </simpleType>
  <element name="CallUploadSong" type="tns:UploadSongCall"/>
  <element name="CallDeleteSong" type="tns:DeleteSongCall"/>
  <element name="CallIsSongLoaded" type="tns:IsSongLoadedCall"/>
  <element name="CallAddSpeaker" type="tns:AddSpeakerCall"/>
  <complexType name="AddSpeakerCall">
    <sequence>
      <element name="AddSpeakerRequest" type="pref:AddSpeakerRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="CallRemoveSpeaker" type="tns:CallRemoveSpeaker"/>
  <element name="CallMoveSpeaker" type="tns:CallMoveSpeaker"/>
  <element name="CallSetSoundScapeSourceLayout" type="tns:CallSetSoundScapeSourceLayout"></element>
  <element name="CallPlaybackCommand" type="tns:CallPlaybackCommand"></element>
  <complexType name="CallMoveSpeaker">
    <sequence>
      <element name="setSpeakerLocationRequest" type="pref:SetSpeakerLocationRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallPlaybackCommand">
    <sequence>
      <element name="playbackCommand" type="pref1:ProcessPlaybackCommandRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallRemoveSpeaker">
    <sequence>
      <element name="removeSpeakerRequest" type="pref:RemoveSpeakerRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallSetSoundScapeSourceLayout">
    <sequence>
      <element name="setSoundScapeSourceLayoutRequest" type="pref1:SetSoundScapeSourceLayoutRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="functionRequest" type="tns:conversationId"/>
  <element name="UploadSongCallback" type="pref2:UploadSongResponse"></element>
  <element name="DeleteSongCallback" type="pref2:DeleteSongResponse"></element>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>http://localhost:8182/onResult</con:endpoint>
    </con:endpoints>
    <con:operation id="3857db0a-9103-4970-95b6-693aede8703b" isOneWay="false" action="DistributedSoundScape/deleteSongCallbackFunction" name="deleteSongCallbackFunction" bindingOperationName="deleteSongCallbackFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="27daacf3-32f5-4dff-9691-799bce67f5e7" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8182/onResult</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:DeleteSongCallback>\r
         <response>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <Successfull>?</Successfull>\r
            <ErrorMessage>?</ErrorMessage>\r
         </response>\r
         <conversationId>?</conversationId>\r
      </orc:DeleteSongCallback>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/deleteSongCallbackFunction"/>
      </con:call>
    </con:operation>
    <con:operation id="f352f7a6-edf2-424f-b836-46617491aa3e" isOneWay="false" action="DistributedSoundScape/requestFunction" name="requestFunction" bindingOperationName="requestFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="dcfedc47-db54-4240-8faf-688466a88cf3" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8182/onResult</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:functionRequest>?</orc:functionRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/requestFunction"/>
      </con:call>
    </con:operation>
    <con:operation id="4223736e-d3e0-49c9-9516-909087d95d87" isOneWay="false" action="DistributedSoundScape/uploadSongCallbackFunction" name="uploadSongCallbackFunction" bindingOperationName="uploadSongCallbackFunction" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="ac9cf316-ae86-4b21-be14-f82b60066ae9" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8182/onResult</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:UploadSongCallback>\r
         <conversationId>?</conversationId>\r
         <response>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <Successfull>?</Successfull>\r
            <ErrorMessage>?</ErrorMessage>\r
         </response>\r
      </orc:UploadSongCallback>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="DistributedSoundScape/uploadSongCallbackFunction"/>
      </con:call>
    </con:operation>
  </con:interface>
  <con:interface xsi:type="con:WsdlInterface" id="0395e1d9-db1a-476b-81ef-5ab0eb8c4599" wsaVersion="NONE" name="UploadCallbackServiceSOAP" type="wsdl" bindingName="{http://www.example.org/UploadService/}UploadCallbackServiceSOAP" soapVersion="1_1" anonymous="optional" definition="bpelContent/DistributedSoundScapeArtifacts.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="file:/B:/SOA/workspace/DistributedSoundScapeBPEL/bpelContent/DistributedSoundScapeArtifacts.wsdl">
      <con:part>
        <con:url>file:/B:/SOA/workspace/DistributedSoundScapeBPEL/bpelContent/DistributedSoundScapeArtifacts.wsdl</con:url>
        <con:content><![CDATA[<definitions name="DistributedSoundScape" targetNamespace="DistributedSoundScape" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:cs="http://www.example.org/ControlServiceElements/" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:rs="http://www.example.org/RegistrationServiceElements/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ssdt="http://www.example.org/SoundScapeDataTypes/" xmlns:tns="DistributedSoundScape" xmlns:types="http://www.example.org/OrchestratorElements/" xmlns:us="http://www.example.org/UploadServiceElements/" xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop" xmlns:wsdl="http://www.example.org/UploadService/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		TYPE DEFINITION - List of types participating in this BPEL process The BPEL 
		Designer will generate default request and response types but you can define 
		or import any XML Schema type and use them as part of the message types. 
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <vprop:property name="conversationId" type="xsd:string"/>
  <vprop:propertyAlias messageType="wsdl:UploadSongRequest" part="Request" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="wsdl:UploadSongResponse" part="Response" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="tns:functionRequest" part="functionRequest" propertyName="tns:conversationId"/>
  <vprop:propertyAlias messageType="tns:UploadSongRequest" part="UploadSongRequest" propertyName="tns:conversationId">
    <vprop:query>/conversationId</vprop:query>
  </vprop:propertyAlias>
  <vprop:propertyAlias messageType="tns:stopRequest" part="stopRequest" propertyName="tns:conversationId"/>
  <import location="UploadService.wsdl" namespace="http://www.example.org/UploadService/"/>
  <types>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="DistributedSoundScape" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://www.example.org/RegistrationServiceElements/" schemaLocation="schemas/type-definitions/RegistrationServiceElements.xsd"/>
      <import namespace="http://www.example.org/ControlServiceElements/" schemaLocation="schemas/type-definitions/ControlServiceElements.xsd"/>
      <import namespace="http://www.example.org/UploadServiceElements/" schemaLocation="schemas/type-definitions/UploadServiceElements.xsd"/>
      <import namespace="http://www.example.org/OrchestratorElements/" schemaLocation="schemas/type-definitions/OrchestratorElements.xsd"/>
      <import namespace="http://www.example.org/SoundScapeDataTypes/" schemaLocation="schemas/type-definitions/SoundScapeDataTypes.xsd"/>
    </schema>
  </types>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		MESSAGE TYPE DEFINITION - Definition of the message types used as part of 
		the port type defintions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <message name="RegisterUserRequest">
    <part element="rs:RegisterUserRequest" name="RegisterUserRequest"/>
  </message>
  <message name="UploadSongRequest">
    <part element="types:CallUploadSong" name="UploadSongRequest"/>
  </message>
  <message name="DeleteSongRequest">
    <part element="types:CallDeleteSong" name="DeleteSongRequest"/>
  </message>
  <message name="IsSongLoadedRequest">
    <part element="types:CallIsSongLoaded" name="IsSongLoadedRequest"/>
  </message>
  <message name="AddSpeakerRequest">
    <part element="types:CallAddSpeaker" name="AddSpeakerRequest"/>
  </message>
  <message name="RemoveSpeakerRequest">
    <part element="types:CallRemoveSpeaker" name="RemoveSpeakerRequest"/>
  </message>
  <message name="ProcessPlaybackCommandRequest">
    <part element="types:CallPlaybackCommand" name="ProcessPlaybackCommandRequest"/>
  </message>
  <message name="SetSoundScapeSourceLayoutRequest">
    <part element="types:CallSetSoundScapeSourceLayout" name="SetSoundScapeSourceLayoutRequest"/>
  </message>
  <message name="stopRequest">
    <part element="types:Stop" name="stopRequest"/>
  </message>
  <message name="functionRequest">
    <part element="types:functionRequest" name="functionRequest"/>
  </message>
  <message name="finishMessage">
    <part element="rs:RegisterUserResponse" name="RegisterUserResponse"/>
  </message>
  <message name="uploadSongCallbackhMessage">
    <part element="types:UploadSongCallback" name="uploadSongCallbackhMessage"/>
  </message>
  <message name="deleteSongCallbackhMessage">
    <part element="types:DeleteSongCallback" name="deleteSongCallbackhMessage"/>
  </message>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		PORT TYPE DEFINITION - A port type groups a set of operations into a logical 
		service unit. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!--portType implemented by the DistributedSoundScape BPEL process-->
  <portType name="DistributedSoundScape">
    <operation name="RegisterUserFunction">
      <input message="tns:RegisterUserRequest"/>
    </operation>
    <operation name="UploadSongFunction">
      <input message="tns:UploadSongRequest"/>
    </operation>
    <operation name="DeleteSongFunction">
      <input message="tns:DeleteSongRequest"/>
    </operation>
    <operation name="IsSongLoadedFunction">
      <input message="tns:IsSongLoadedRequest"/>
    </operation>
    <operation name="AddSpeakerFunction">
      <input message="tns:AddSpeakerRequest"/>
    </operation>
    <operation name="RemoveSpeakerFunction">
      <input message="tns:RemoveSpeakerRequest"/>
    </operation>
    <operation name="ProcessPlaybackCommandFunction">
      <input message="tns:ProcessPlaybackCommandRequest"/>
    </operation>
    <operation name="SetSoundScapeSourceLayoutFunction">
      <input message="tns:SetSoundScapeSourceLayoutRequest"/>
    </operation>
    <operation name="stopFunction">
      <input message="tns:stopRequest"/>
    </operation>
    <operation name="finishFunction">
      <input message="tns:finishMessage"/>
    </operation>
  </portType>
  <portType name="DistributedSoundScapeCallback">
    <operation name="requestFunction">
      <input message="tns:functionRequest"/>
    </operation>
    <operation name="uploadSongCallbackFunction">
      <input message="tns:uploadSongCallbackhMessage"/>
    </operation>
    <operation name="deleteSongCallbackFunction">
      <input message="tns:deleteSongCallbackhMessage"/>
    </operation>
  </portType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		PARTNER LINK TYPE DEFINITION ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <plnk:partnerLinkType name="DistributedSoundScape">
    <plnk:role name="DistributedSoundScapeProvider" portType="tns:DistributedSoundScape"/>
    <plnk:role name="DistributedSoundScapeRequester" portType="tns:DistributedSoundScapeCallback"/>
  </plnk:partnerLinkType>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		BINDING DEFINITION - Defines the message format and protocol details for 
		a web service. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <binding name="DistributedSoundScapeBinding" type="tns:DistributedSoundScape">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="RegisterUserFunction">
      <soap:operation soapAction="DistributedSoundScape/RegisterUserFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="UploadSongFunction">
      <soap:operation soapAction="DistributedSoundScape/UploadSongFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="DeleteSongFunction">
      <soap:operation soapAction="DistributedSoundScape/DeleteSongFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="IsSongLoadedFunction">
      <soap:operation soapAction="DistributedSoundScape/IsSongLoadedFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="AddSpeakerFunction">
      <soap:operation soapAction="DistributedSoundScape/AddSpeakerFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="RemoveSpeakerFunction">
      <soap:operation soapAction="DistributedSoundScape/RemoveSpeakerFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="ProcessPlaybackCommandFunction">
      <soap:operation soapAction="DistributedSoundScape/ProcessPlaybackCommandFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="SetSoundScapeSourceLayoutFunction">
      <soap:operation soapAction="DistributedSoundScape/SetSoundScapeSourceLayoutFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="stopFunction">
      <soap:operation soapAction="DistributedSoundScape/stopFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="finishFunction">
      <soap:operation soapAction="DistributedSoundScape/finishFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
  </binding>
  <binding name="DistributedSoundScapeCallbackBinding" type="tns:DistributedSoundScapeCallback">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="requestFunction">
      <soap:operation soapAction="DistributedSoundScape/requestFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="uploadSongCallbackFunction">
      <soap:operation soapAction="DistributedSoundScape/uploadSongCallbackFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
    <operation name="deleteSongCallbackFunction">
      <soap:operation soapAction="DistributedSoundScape/deleteSongCallbackFunction"/>
      <input>
        <soap:body use="literal"/>
      </input>
    </operation>
  </binding>
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
		SERVICE DEFINITION - A service groups a set of ports into a service unit. 
		~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <service name="DistributedSoundScapeServiceCallback">
    <port binding="tns:DistributedSoundScapeCallbackBinding" name="DistributedSoundScapePortCallbackPort">
      <soap:address location="http://localhost:8182/onResult"/>
    </port>
  </service>
  <service name="DistributedSoundScapeService">
    <port binding="tns:DistributedSoundScapeBinding" name="DistributedSoundScapePort">
      <soap:address location="http://localhost:8080/ode/processes/DistributedSoundScape"/>
    </port>
  </service>
</definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\UploadService.wsdl</con:url>
        <con:content><![CDATA[<wsdl:definitions name="UploadService" targetNamespace="http://www.example.org/UploadService/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.example.org/UploadService/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:types="http://www.example.org/UploadServiceElements/" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
  <wsdl:types>
    <xsd:schema targetNamespace="http://www.example.org/UploadService/">
      <xsd:import namespace="http://www.example.org/UploadServiceElements/" schemaLocation="schemas/type-definitions/UploadServiceElements.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <plnk:partnerLinkType name="UploadServiceLinkType">
    <plnk:role name="uploadProvider" portType="tns:UploadService">
      <plnk:portType name="tns:UploadService"/>
    </plnk:role>
    <plnk:role name="uploadRequester" portType="tns:UploadCallbackService">
      <plnk:portType name="tns:UploadCallbackService"/>
    </plnk:role>
  </plnk:partnerLinkType>
  <!--Provider-->
  <wsdl:message name="UploadSongRequest">
    <wsdl:part name="Request" element="types:UploadSongRequest"/>
  </wsdl:message>
  <wsdl:message name="DeleteSongRequest">
    <wsdl:part name="Request" element="types:DeleteSongRequest"/>
  </wsdl:message>
  <wsdl:message name="IsSongLoadedRequest">
    <wsdl:part name="Request" element="types:IsSongLoadedRequest"/>
  </wsdl:message>
  <wsdl:message name="IsSongLoadedResponse">
    <wsdl:part name="Response" element="types:IsSongLoadedResponse"/>
  </wsdl:message>
  <!--Callback-->
  <wsdl:message name="UploadSongResponse">
    <wsdl:part name="Response" element="types:UploadSongResponse"/>
  </wsdl:message>
  <wsdl:message name="DeleteSongResponse">
    <wsdl:part name="Response" element="types:DeleteSongResponse"/>
  </wsdl:message>
  <wsdl:message name="ErrorMessage">
    <wsdl:part name="ErrorMessage" element="types:ErrorMessage"/>
  </wsdl:message>
  <!--Provider-->
  <wsdl:portType name="UploadService">
    <wsdl:operation name="UploadSong">
      <wsdl:input message="tns:UploadSongRequest"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteSong">
      <wsdl:input message="tns:DeleteSongRequest"/>
    </wsdl:operation>
    <wsdl:operation name="IsSongLoaded">
      <wsdl:input message="tns:IsSongLoadedRequest"/>
      <wsdl:output message="tns:IsSongLoadedResponse"/>
      <wsdl:fault name="Error" message="tns:ErrorMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--Callback-->
  <wsdl:portType name="UploadCallbackService">
    <wsdl:operation name="UploadSongCallback">
      <wsdl:input message="tns:UploadSongResponse"/>
    </wsdl:operation>
    <wsdl:operation name="DeleteSongCallback">
      <wsdl:input message="tns:DeleteSongResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--Provider-->
  <wsdl:binding name="UploadServiceSOAP" type="tns:UploadService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="UploadSong">
      <soap:operation soapAction="http://www.example.org/UploadService/UploadSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="DeleteSong">
      <soap:operation soapAction="http://www.example.org/UploadService/DeleteSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="IsSongLoaded">
      <soap:operation soapAction="http://www.example.org/UploadService/IsSongLoaded"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Error">
        <soap:fault name="Error" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <!--Callback-->
  <wsdl:binding name="UploadCallbackServiceSOAP" type="tns:UploadCallbackService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="UploadSongCallback">
      <soap:operation soapAction="http://www.example.org/UploadCallbackService/UploadSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="DeleteSongCallback">
      <soap:operation soapAction="http://www.example.org/UploadCallbackService/DeleteSong"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <!--Provider-->
  <wsdl:service name="UploadService">
    <wsdl:port binding="tns:UploadServiceSOAP" name="UploadServiceSOAP">
      <soap:address location="http://localhost:9080/DistributedSoundScape/services/UploadService/"/>
    </wsdl:port>
  </wsdl:service>
  <!--Callback-->
  <wsdl:service name="UploadCallbackService">
    <wsdl:port binding="tns:UploadCallbackServiceSOAP" name="UploadCallbackServiceSOAP">
      <soap:address location="http://localhost:8080/ode/processes/UploadCallbackService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\UploadServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/UploadServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/UploadServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="UploadSongRequest" type="tns:UploadSongRequest"/>
  <element name="DeleteSongRequest" type="tns:DeleteSongRequest"/>
  <element name="IsSongLoadedRequest" type="tns:IsSongLoadedRequest"></element>
  <element name="IsSongLoadedResponse" type="boolean"/>
  <element name="DeleteSongResponse" type="tns:DeleteSongResponse"/>
  <element name="UploadSongResponse" type="tns:UploadSongResponse"/>
  <complexType name="DeleteSongRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="IsSongLoadedRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="UploadSongRequest">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="ErrorMessage" type="string"/>
  <complexType name="UploadSongResponse">
    <sequence>
      <element name="conversationId" type="string"/>
      <element name="response" type="types:ASyncResponse"/>
    </sequence>
  </complexType>
  <complexType name="DeleteSongResponse">
    <sequence>
      <element name="response" type="types:ASyncResponse"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\SoundScapeDataTypes.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/SoundScapeDataTypes/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/SoundScapeDataTypes/">
  <simpleType name="SoundscapeId">
    <restriction base="unsignedInt"/>
  </simpleType>
  <simpleType name="Port">
    <restriction base="unsignedShort"/>
  </simpleType>
  <simpleType name="IPv4Address">
    <annotation>
      <documentation>IPv4 address in dot-decimal notation. Equivalent to [0-255].[0-255].[0-255].[0-255]</documentation>
    </annotation>
    <restriction base="string">
      <pattern value="((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"/>
    </restriction>
  </simpleType>
  <complexType name="Location">
    <sequence>
      <element name="x" type="short" maxOccurs="1" minOccurs="1"/>
      <element name="y" type="short" maxOccurs="1" minOccurs="1"/>
      <element name="z" type="short" maxOccurs="1" minOccurs="1"/>
    </sequence>
  </complexType>
  <complexType name="GeneralDevice">
    <sequence>
      <element name="IpAddress" type="tns:IPv4Address"/>
      <element name="Port" type="tns:Port"/>
      <element name="SoundScapeId" type="tns:SoundscapeId"/>
    </sequence>
  </complexType>
  <complexType name="SpeakerDevice">
    <sequence>
      <element name="GeneralDevice" type="tns:GeneralDevice"/>
      <element name="Location" type="tns:Location"/>
    </sequence>
  </complexType>
  <complexType name="SpeakerDeviceArray">
    <sequence>
      <element name="SpeakerDevice" type="tns:SpeakerDevice" maxOccurs="unbounded" minOccurs="0"/>
    </sequence>
  </complexType>
  <complexType name="Link">
    <sequence>
      <element name="Type" type="tns:LinkType"/>
      <element name="Address" type="string"/>
    </sequence>
  </complexType>
  <simpleType name="LinkType">
    <restriction base="string">
      <enumeration value="ftp"/>
      <enumeration value="http"/>
      <enumeration value="https"/>
    </restriction>
  </simpleType>
  <simpleType name="ChannelNumber">
    <restriction base="unsignedShort"/>
  </simpleType>
  <simpleType name="VolumeLevel">
    <restriction base="double">
      <minInclusive value="0"/>
    </restriction>
  </simpleType>
  <complexType name="ChannelLayout">
    <sequence>
      <element name="ChannelNumber" type="tns:ChannelNumber"/>
      <element name="Location" type="tns:Location"/>
      <element name="VolumeLevel" type="tns:VolumeLevel"/>
    </sequence>
  </complexType>
  <complexType name="SoundScapeSourceLayout">
    <sequence>
      <element name="ChannelLayouts" type="tns:ChannelLayout" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <simpleType name="PlaybackCommand">
    <restriction base="string"/>
  </simpleType>
  <complexType name="ASyncResponse">
    <choice>
      <element name="Successfull" type="boolean"/>
      <element name="ErrorMessage" type="string"/>
    </choice>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\RegistrationServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/RegistrationServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/RegistrationServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="RegisterUserRequest" type="tns:RegisterUserRequest"></element>
  <element name="RegisterUserResponse" type="boolean"/>
  <element name="GetSpeakersRequest" type="tns:GetSpeakersRequest"/>
  <element name="GetSpeakersResponse" type="tns:GetSpeakersResponse"></element>
  <element name="SetSpeakerLocationRequest" type="tns:SetSpeakerLocationRequest"></element>
  <complexType name="SetSpeakerLocationRequest">
    <sequence>
      <element name="SpeakerDevice" type="types:SpeakerDevice"/>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <complexType name="GetSpeakersRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <complexType name="GetSpeakersResponse">
    <sequence>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <complexType name="RegisterUserRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="SetSpeakerLocationResponse" type="boolean"/>
  <complexType name="RemoveUserRequest">
    <sequence>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="RemoveUserRequest" type="tns:RemoveUserRequest"/>
  <element name="ErrorMessage" type="string"/>
  <element name="AddSpeakerRequest" type="tns:AddSpeakerRequest"/>
  <element name="RemoveSpeakerRequest" type="tns:RemoveSpeakerRequest"></element>
  <complexType name="AddSpeakerRequest">
    <sequence>
      <element name="Speaker" type="types:SpeakerDevice"/>
    </sequence>
  </complexType>
  <complexType name="RemoveSpeakerRequest">
    <sequence>
      <element name="Speaker" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="AddSpeakerResponse" type="boolean"/>
  <element name="RemoveSpeakerResponse" type="boolean"/>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\ControlServiceElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/ControlServiceElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/ControlServiceElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"/>
  <element name="SetSoundScapeSourceLayoutRequest" type="tns:SetSoundScapeSourceLayoutRequest"></element>
  <complexType name="SetSoundScapeSourceLayoutRequest">
    <sequence>
      <element name="SoundScapeSourceLayout" type="types:SoundScapeSourceLayout"></element>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
  <element name="SetSoundScapeSourceLayoutResponse" type="boolean"/>
  <element name="ProcessPlaybackCommandRequest" type="tns:ProcessPlaybackCommandRequest"></element>
  <element name="ProcessPlaybackCommandResponse" type="boolean"/>
  <element name="ErrorMessage" type="string"/>
  <complexType name="ProcessPlaybackCommandRequest">
    <sequence>
      <element name="Command" type="types:PlaybackCommand"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
    </sequence>
  </complexType>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
      <con:part>
        <con:url>file:\B:\SOA\workspace\DistributedSoundScapeBPEL\bpelContent\schemas\type-definitions\OrchestratorElements.xsd</con:url>
        <con:content><![CDATA[<schema targetNamespace="http://www.example.org/OrchestratorElements/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.example.org/OrchestratorElements/" xmlns:types="http://www.example.org/SoundScapeDataTypes/" xmlns:pref="http://www.example.org/RegistrationServiceElements/" xmlns:pref1="http://www.example.org/ControlServiceElements/" xmlns:pref2="http://www.example.org/UploadServiceElements/">
  <import schemaLocation="SoundScapeDataTypes.xsd" namespace="http://www.example.org/SoundScapeDataTypes/"></import>
  <import schemaLocation="RegistrationServiceElements.xsd" namespace="http://www.example.org/RegistrationServiceElements/"></import>
  <import schemaLocation="ControlServiceElements.xsd" namespace="http://www.example.org/ControlServiceElements/"></import>
  <import schemaLocation="UploadServiceElements.xsd" namespace="http://www.example.org/UploadServiceElements/"/>
  <complexType name="DeleteSongCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="IsSongLoadedCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="UploadSongCall">
    <sequence>
      <element name="Link" type="types:Link"/>
      <element name="Speakers" type="types:SpeakerDeviceArray"/>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="ConfirmRegistrationMessage" type="tns:RegisterUserResponse"></element>
  <complexType name="RegisterUserResponse">
    <sequence>
      <element name="RegisterUserReponse" type="boolean"/>
      <element name="User" type="types:GeneralDevice"/>
    </sequence>
  </complexType>
  <element name="Stop" type="tns:conversationId"/>
  <simpleType name="conversationId">
    <restriction base="string"/>
  </simpleType>
  <element name="CallUploadSong" type="tns:UploadSongCall"/>
  <element name="CallDeleteSong" type="tns:DeleteSongCall"/>
  <element name="CallIsSongLoaded" type="tns:IsSongLoadedCall"/>
  <element name="CallAddSpeaker" type="tns:AddSpeakerCall"/>
  <complexType name="AddSpeakerCall">
    <sequence>
      <element name="AddSpeakerRequest" type="pref:AddSpeakerRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="CallRemoveSpeaker" type="tns:CallRemoveSpeaker"/>
  <element name="CallMoveSpeaker" type="tns:CallMoveSpeaker"/>
  <element name="CallSetSoundScapeSourceLayout" type="tns:CallSetSoundScapeSourceLayout"></element>
  <element name="CallPlaybackCommand" type="tns:CallPlaybackCommand"></element>
  <complexType name="CallMoveSpeaker">
    <sequence>
      <element name="setSpeakerLocationRequest" type="pref:SetSpeakerLocationRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallPlaybackCommand">
    <sequence>
      <element name="playbackCommand" type="pref1:ProcessPlaybackCommandRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallRemoveSpeaker">
    <sequence>
      <element name="removeSpeakerRequest" type="pref:RemoveSpeakerRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <complexType name="CallSetSoundScapeSourceLayout">
    <sequence>
      <element name="setSoundScapeSourceLayoutRequest" type="pref1:SetSoundScapeSourceLayoutRequest"></element>
      <element name="conversationId" type="string"/>
    </sequence>
  </complexType>
  <element name="functionRequest" type="tns:conversationId"/>
  <element name="UploadSongCallback" type="pref2:UploadSongResponse"></element>
  <element name="DeleteSongCallback" type="pref2:DeleteSongResponse"></element>
</schema>]]></con:content>
        <con:type>http://www.w3.org/2001/XMLSchema</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>http://localhost:8080/ode/processes/UploadCallbackService</con:endpoint>
    </con:endpoints>
    <con:operation id="a5e6cba4-8424-4231-8c92-70c88e3a0c07" isOneWay="false" action="http://www.example.org/UploadCallbackService/DeleteSong" name="DeleteSongCallback" bindingOperationName="DeleteSongCallback" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="d1a217dd-d404-46ce-a84e-852a725e64fa" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/UploadCallbackService</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:upl="http://www.example.org/UploadServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <upl:DeleteSongResponse>\r
         <response>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <Successfull>?</Successfull>\r
            <ErrorMessage>?</ErrorMessage>\r
         </response>\r
         <conversationId>?</conversationId>\r
      </upl:DeleteSongResponse>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/UploadCallbackService/DeleteSong"/>
      </con:call>
    </con:operation>
    <con:operation id="7d717956-e8fe-4683-82f2-8d6fc4150778" isOneWay="false" action="http://www.example.org/UploadCallbackService/UploadSong" name="UploadSongCallback" bindingOperationName="UploadSongCallback" type="One-Way" inputName="" sendsAttachments="false" anonymous="optional">
      <con:settings/>
      <con:call id="0cfbcb0a-0c69-4a03-98d0-28183626e3a8" name="Request 1">
        <con:settings/>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://localhost:8080/ode/processes/UploadCallbackService</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:upl="http://www.example.org/UploadServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <upl:UploadSongResponse>\r
         <conversationId>?</conversationId>\r
         <response>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <Successfull>?</Successfull>\r
            <ErrorMessage>?</ErrorMessage>\r
         </response>\r
      </upl:UploadSongResponse>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.example.org/UploadCallbackService/UploadSong"/>
      </con:call>
    </con:operation>
  </con:interface>
  <con:testSuite id="28d3a076-3e4b-4d6f-b85d-3ec0cf7bc645" name="DistributedSoundScapeBinding TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="f7eb9a33-b049-43c1-b381-49ad401cdd90" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="AddSpeakerFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="request" id="87fa253f-a494-439d-aa20-09bf9e9ca63a" name="AddSpeakerFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>AddSpeakerFunction</con:operation>
          <con:request name="AddSpeakerFunction" id="155b7c5e-3648-4287-9563-3406700f423e">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallAddSpeaker>\r
         <AddSpeakerRequest>\r
            <Speaker>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </Speaker>\r
         </AddSpeakerRequest>\r
         <conversationId>?</conversationId>\r
      </orc:CallAddSpeaker>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/AddSpeakerFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="dd4c4e95-eb4a-42f8-ae1c-f53d68db4086" name="LoadTest AddSpeakerFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="20b9c2ed-d142-4eb5-96a9-4e3c001ba406" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="DeleteSongFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="8e2bf886-a6fb-41f3-b47c-6470ecdf0242" name="DeleteSongFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>DeleteSongFunction</con:operation>
          <con:request name="DeleteSongFunction" id="bdb81a11-7ddf-457b-ba09-8ed3ed154d6f">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallDeleteSong>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
         <conversationId>?</conversationId>\r
      </orc:CallDeleteSong>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/DeleteSongFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="b6fd4a92-ea23-4d69-b92f-3ef2705c6006" name="LoadTest DeleteSongFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="9251441d-ed7f-446f-b0f1-e4f2070fdbfb" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="finishFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="b44de1fd-c234-4da4-a686-eebe4997e722" name="finishFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>finishFunction</con:operation>
          <con:request name="finishFunction" id="98473fae-78ec-4ada-a7f6-ca736f7f3180">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:reg="http://www.example.org/RegistrationServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <reg:RegisterUserResponse>?</reg:RegisterUserResponse>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/finishFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="5c17ff5f-89f1-477d-ac3b-f5b466e2bb64" name="LoadTest finishFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="3e13efc8-19f6-4a2c-9662-b85ac9521ea6" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="IsSongLoadedFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="ed7237f4-5f37-48a3-9554-90e839536851" name="IsSongLoadedFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>IsSongLoadedFunction</con:operation>
          <con:request name="IsSongLoadedFunction" id="6e9cfa90-5073-4df2-91bc-d15162aad16d">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallIsSongLoaded>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
         <conversationId>?</conversationId>\r
      </orc:CallIsSongLoaded>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/IsSongLoadedFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="a1d8eda7-e867-460b-b1c5-fdab063d258b" name="LoadTest IsSongLoadedFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="251baa66-85fa-4c0e-8f6c-3c73f42a6c6d" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="ProcessPlaybackCommandFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="f4d64f66-2e6b-443a-801d-aa14d2769cfc" name="ProcessPlaybackCommandFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>ProcessPlaybackCommandFunction</con:operation>
          <con:request name="ProcessPlaybackCommandFunction" id="551cbce5-9461-4d4b-b0ea-ba3542d8fef3">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallPlaybackCommand>\r
         <playbackCommand>\r
            <Command>?</Command>\r
            <Speakers>\r
               <!--Zero or more repetitions:-->\r
               <SpeakerDevice>\r
                  <GeneralDevice>\r
                     <IpAddress>?</IpAddress>\r
                     <Port>?</Port>\r
                     <SoundScapeId>?</SoundScapeId>\r
                  </GeneralDevice>\r
                  <Location>\r
                     <x>?</x>\r
                     <y>?</y>\r
                     <z>?</z>\r
                  </Location>\r
               </SpeakerDevice>\r
            </Speakers>\r
         </playbackCommand>\r
         <conversationId>?</conversationId>\r
      </orc:CallPlaybackCommand>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/ProcessPlaybackCommandFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="089702f4-5b64-4403-abd9-c4772a6d6bae" name="LoadTest ProcessPlaybackCommandFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="d5c37c84-1776-4d95-99f2-78227ff07c88" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="RegisterUserFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="8e1fa699-ac04-49f8-8a0a-4cbef2d481fe" name="RegisterUserFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>RegisterUserFunction</con:operation>
          <con:request name="RegisterUserFunction" id="8702e964-b0d9-4e44-a077-b0307b33f780">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:reg="http://www.example.org/RegistrationServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <reg:RegisterUserRequest>\r
         <User>\r
            <IpAddress>?</IpAddress>\r
            <Port>?</Port>\r
            <SoundScapeId>?</SoundScapeId>\r
         </User>\r
      </reg:RegisterUserRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/RegisterUserFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="149d7f0f-6cf7-4e57-8940-319b63fc69b1" name="LoadTest RegisterUserFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="ee0b3439-2c83-4ed2-95fb-00ab275b0225" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="RemoveSpeakerFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="7b16eafd-dc90-4e02-908e-c1bd74bfab05" name="RemoveSpeakerFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>RemoveSpeakerFunction</con:operation>
          <con:request name="RemoveSpeakerFunction" id="318ddea7-a943-41ba-8f95-0be5e21ad3e4">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallRemoveSpeaker>\r
         <removeSpeakerRequest>\r
            <Speaker>\r
               <IpAddress>?</IpAddress>\r
               <Port>?</Port>\r
               <SoundScapeId>?</SoundScapeId>\r
            </Speaker>\r
         </removeSpeakerRequest>\r
         <conversationId>?</conversationId>\r
      </orc:CallRemoveSpeaker>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/RemoveSpeakerFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="554b32bd-b0a0-4844-bae2-16f6df38eb6b" name="LoadTest RemoveSpeakerFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="310aebd5-e521-4cee-859d-25a5741df381" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="SetSoundScapeSourceLayoutFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="a5960665-c70a-452d-831f-de6d1b7e7890" name="SetSoundScapeSourceLayoutFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>SetSoundScapeSourceLayoutFunction</con:operation>
          <con:request name="SetSoundScapeSourceLayoutFunction" id="25f6b3df-77d3-4fc4-b538-e7a69929c2e8">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallSetSoundScapeSourceLayout>\r
         <setSoundScapeSourceLayoutRequest>\r
            <SoundScapeSourceLayout>\r
               <!--1 or more repetitions:-->\r
               <ChannelLayouts>\r
                  <ChannelNumber>?</ChannelNumber>\r
                  <Location>\r
                     <x>?</x>\r
                     <y>?</y>\r
                     <z>?</z>\r
                  </Location>\r
                  <VolumeLevel>?</VolumeLevel>\r
               </ChannelLayouts>\r
            </SoundScapeSourceLayout>\r
            <Speakers>\r
               <!--Zero or more repetitions:-->\r
               <SpeakerDevice>\r
                  <GeneralDevice>\r
                     <IpAddress>?</IpAddress>\r
                     <Port>?</Port>\r
                     <SoundScapeId>?</SoundScapeId>\r
                  </GeneralDevice>\r
                  <Location>\r
                     <x>?</x>\r
                     <y>?</y>\r
                     <z>?</z>\r
                  </Location>\r
               </SpeakerDevice>\r
            </Speakers>\r
         </setSoundScapeSourceLayoutRequest>\r
         <conversationId>?</conversationId>\r
      </orc:CallSetSoundScapeSourceLayout>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/SetSoundScapeSourceLayoutFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="b9cb9dc8-85af-4cca-9e47-cbfcc695ca4b" name="LoadTest SetSoundScapeSourceLayoutFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="d31a2ab7-d50c-42a6-9e24-339c2cf4c5a4" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="stopFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="74eebb2e-106e-4b26-8203-3d8477e2d3ee" name="stopFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>stopFunction</con:operation>
          <con:request name="stopFunction" id="42db6a78-ca2a-4279-82ec-cc63aeb7d9dd">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:Stop>?</orc:Stop>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/stopFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="cc340db7-278e-4cd8-8817-ead27cbbd620" name="LoadTest stopFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="f91dd7f3-d1ed-4820-bce5-8fa599a8edab" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="UploadSongFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="67ed1112-ae71-40f9-8b07-046dbe90bf91" name="UploadSongFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>UploadSongFunction</con:operation>
          <con:request name="UploadSongFunction" id="7e435929-6307-4f26-9322-0f4ac2489275">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:CallUploadSong>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
         <conversationId>?</conversationId>\r
      </orc:CallUploadSong>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/UploadSongFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="7e699ee3-a12b-43b2-963e-94a397913b08" name="LoadTest UploadSongFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite id="8be5e864-fb07-4c30-92c9-428bb03e1847" name="UploadServiceSOAP TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="f057d06b-1140-42ab-a902-7c6090a60a64" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="DeleteSong TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="394a44f9-64a9-4bb1-bb31-7929652475f6" name="DeleteSong">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>UploadServiceSOAP</con:interface>
          <con:operation>DeleteSong</con:operation>
          <con:request name="DeleteSong" id="5468b800-ad10-419a-9190-9de8b1e0d8f7">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:9080/DistributedSoundScape/services/UploadService/</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:upl="http://www.example.org/UploadServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <upl:DeleteSongRequest>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
      </upl:DeleteSongRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="http://www.example.org/UploadService/DeleteSong"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="348e3b04-8c44-4e36-8947-3e0688673762" name="LoadTest DeleteSong">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="eb75e345-23f7-4a29-8f64-e001ff17f2a8" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="IsSongLoaded TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="b2003746-f610-47ac-a922-0e15f051b1a3" name="IsSongLoaded">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>UploadServiceSOAP</con:interface>
          <con:operation>IsSongLoaded</con:operation>
          <con:request name="IsSongLoaded" id="3021f191-984b-45e6-a918-3b44b2296d35">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:9080/DistributedSoundScape/services/UploadService/</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:upl="http://www.example.org/UploadServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <upl:IsSongLoadedRequest>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
      </upl:IsSongLoadedRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="http://www.example.org/UploadService/IsSongLoaded"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="98975107-718f-41d6-a786-549d572b6c00" name="LoadTest IsSongLoaded">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="818b5ab4-625d-4a7a-88e0-53ace64f16c7" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="UploadSong TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="161c3d13-8c43-4b4e-a5e6-d573916915f7" name="UploadSong">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>UploadServiceSOAP</con:interface>
          <con:operation>UploadSong</con:operation>
          <con:request name="UploadSong" id="81f04673-989c-4627-a629-956b2f86a251">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:9080/DistributedSoundScape/services/UploadService/</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:upl="http://www.example.org/UploadServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <upl:UploadSongRequest>\r
         <Link>\r
            <Type>?</Type>\r
            <Address>?</Address>\r
         </Link>\r
         <Speakers>\r
            <!--Zero or more repetitions:-->\r
            <SpeakerDevice>\r
               <GeneralDevice>\r
                  <IpAddress>?</IpAddress>\r
                  <Port>?</Port>\r
                  <SoundScapeId>?</SoundScapeId>\r
               </GeneralDevice>\r
               <Location>\r
                  <x>?</x>\r
                  <y>?</y>\r
                  <z>?</z>\r
               </Location>\r
            </SpeakerDevice>\r
         </Speakers>\r
         <conversationId>?</conversationId>\r
      </upl:UploadSongRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="http://www.example.org/UploadService/UploadSong"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="07a7bf09-3759-40d6-8a20-7636be00fa35" name="LoadTest UploadSong">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite id="85d0db31-1eba-4bc9-bcfb-e2e4c5dc883c" name="DistributedSoundScapeCallbackBinding TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="35ce6a7b-acb6-4407-8fcc-03adde3acad8" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="deleteSongCallbackFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="c8307b5c-6c11-4473-8c07-cc4ff93fde16" name="deleteSongCallbackFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeCallbackBinding</con:interface>
          <con:operation>deleteSongCallbackFunction</con:operation>
          <con:request name="deleteSongCallbackFunction" id="7182e954-aad5-45a7-b39a-f2e93dc185cc">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8182/onResult</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:DeleteSongCallback>\r
         <response>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <Successfull>?</Successfull>\r
            <ErrorMessage>?</ErrorMessage>\r
         </response>\r
         <conversationId>?</conversationId>\r
      </orc:DeleteSongCallback>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/deleteSongCallbackFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="7b036f67-735b-4aed-8be8-95cc0038b87e" name="LoadTest deleteSongCallbackFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="3c763f8e-04d8-40a7-b08a-b3de9c7055e2" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="requestFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="ebcd61c1-9ffa-4915-98b9-308e7561eedc" name="requestFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeCallbackBinding</con:interface>
          <con:operation>requestFunction</con:operation>
          <con:request name="requestFunction" id="a00c5f21-c378-4000-811e-3dca6e63f9de">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8182/onResult</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:functionRequest>?</orc:functionRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/requestFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="ec12ad9f-7dce-48fb-8345-e42d09285771" name="LoadTest requestFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="03111f9a-8a04-4e7b-90b3-37be901578be" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="uploadSongCallbackFunction TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="2b7dc088-89d4-4d5b-b51c-4739ecd4a3ae" name="uploadSongCallbackFunction">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeCallbackBinding</con:interface>
          <con:operation>uploadSongCallbackFunction</con:operation>
          <con:request name="uploadSongCallbackFunction" id="3634e1e8-5e52-4722-881e-d9c423ab6299">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8182/onResult</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <orc:UploadSongCallback>\r
         <conversationId>?</conversationId>\r
         <response>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <Successfull>?</Successfull>\r
            <ErrorMessage>?</ErrorMessage>\r
         </response>\r
      </orc:UploadSongCallback>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="DistributedSoundScape/uploadSongCallbackFunction"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="f2163e1e-8913-4550-b0ac-893f42645100" name="LoadTest uploadSongCallbackFunction">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite id="4e1044c6-d8cd-4244-9f66-f2aa436fdb28" name="UploadCallbackServiceSOAP TestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="b799d81d-4ba6-438f-ab0e-86489ef67f3e" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="DeleteSongCallback TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="d132f6d2-91a1-48b1-80e1-d95ea4870344" name="DeleteSongCallback">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>UploadCallbackServiceSOAP</con:interface>
          <con:operation>DeleteSongCallback</con:operation>
          <con:request name="DeleteSongCallback" id="e7c6fedd-dc21-477f-968b-1cd2bddce868">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/UploadCallbackService</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:upl="http://www.example.org/UploadServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <upl:DeleteSongResponse>\r
         <response>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <Successfull>?</Successfull>\r
            <ErrorMessage>?</ErrorMessage>\r
         </response>\r
         <conversationId>?</conversationId>\r
      </upl:DeleteSongResponse>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="http://www.example.org/UploadCallbackService/DeleteSong"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="60750aeb-dab5-49d5-a55c-a325f172daed" name="LoadTest DeleteSongCallback">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="f4fc144a-bb6a-4a8b-93e5-1caf3512d50a" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="UploadSongCallback TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="request" id="16efc319-d78c-4215-b342-277744021ae4" name="UploadSongCallback">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>UploadCallbackServiceSOAP</con:interface>
          <con:operation>UploadSongCallback</con:operation>
          <con:request name="UploadSongCallback" id="9410b88a-65c2-4603-a22f-726ba07d2b5f">
            <con:settings/>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/UploadCallbackService</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:upl="http://www.example.org/UploadServiceElements/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <upl:UploadSongResponse>\r
         <conversationId>?</conversationId>\r
         <response>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <Successfull>?</Successfull>\r
            <ErrorMessage>?</ErrorMessage>\r
         </response>\r
      </upl:UploadSongResponse>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:wsaConfig action="http://www.example.org/UploadCallbackService/UploadSong"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:loadTest id="dab42bec-4e41-4c68-a13c-4868755f62ac" name="LoadTest UploadSongCallback">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
        </con:settings>
        <con:threadCount>5</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite id="bb66fbba-1272-401f-b33f-ff4a1ffb125e" name="IntegrationTest">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="200ffabc-d7fe-4953-ae5c-dd59b63fa0d6" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="UploadSong" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="properties" name="" id="37055c9d-8f0b-4ce6-93c1-b8e4f2bab005">
        <con:settings/>
        <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:properties>
            <con:property>
              <con:name>conversationId</con:name>
              <con:value>0</con:value>
            </con:property>
          </con:properties>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="RegisterUser" id="220bcabe-f9c7-4e15-9451-02d699d8f835">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>RegisterUserFunction</con:operation>
          <con:request name="RegisterUser" id="ab84a1a1-9aa9-4cc7-93d0-df45384c7d63">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:reg="http://www.example.org/RegistrationServiceElements/">
   <soapenv:Header/>
   <soapenv:Body>
      <reg:RegisterUserRequest>
         <User>
            <IpAddress>0.0.0.0</IpAddress>
            <Port>1</Port>
            <SoundScapeId>1</SoundScapeId>
         </User>
      </reg:RegisterUserRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="mockresponse" name="functionRequest1" id="75c9d61f-216f-4a92-9647-b36921087bab">
        <con:settings/>
        <con:config xsi:type="con:MockResponseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeCallbackBinding</con:interface>
          <con:operation>requestFunction</con:operation>
          <con:path>/onResult</con:path>
          <con:port>8182</con:port>
          <con:response id="91705251-f0bf-41b9-a262-e31ffc0577e0">
            <con:settings/>
            <con:responseContent xsi:nil="true"/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
          </con:response>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="PropertyTransfer 1" id="45f2d987-14aa-4c8a-a3b1-53a05c5f7ee3">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="true">
            <con:name>functionRequest</con:name>
            <con:sourceType>Response</con:sourceType>
            <con:sourceStep>functionRequest1</con:sourceStep>
            <con:sourcePath>declare namespace ns1='http://www.example.org/OrchestratorElements/';
//ns1:functionRequest[1]</con:sourcePath>
            <con:targetType>conversationId</con:targetType>
            <con:targetStep/>
            <con:targetPath/>
            <con:type>XPATH</con:type>
            <con:upgraded>true</con:upgraded>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="callUploadSong" id="ae9a35f3-edb6-4eb5-8111-7bc1afb1f3c1">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>UploadSongFunction</con:operation>
          <con:request name="callUploadSong" id="331ccd6a-b6f3-468a-a2dc-0b3176435524">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">
   <soapenv:Header/>
   <soapenv:Body>
      <orc:CallUploadSong>
         <Link>
            <Type>http</Type>
            <Address>fds</Address>
         </Link>
         <Speakers/>
         <conversationId>w18aaa</conversationId>
      </orc:CallUploadSong>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="mockresponse" name="receiveUploadSongCallback" id="1da4f6d8-f23f-4cca-8e0e-147cf6e44af3">
        <con:settings/>
        <con:config xsi:type="con:MockResponseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeCallbackBinding</con:interface>
          <con:operation>uploadSongCallbackFunction</con:operation>
          <con:path>/onResult</con:path>
          <con:port>8182</con:port>
          <con:response id="e3fe87dd-2030-4d8e-843a-859f3f1423a5">
            <con:settings/>
            <con:responseContent xsi:nil="true"/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
          </con:response>
        </con:config>
      </con:testStep>
      <con:testStep type="mockresponse" name="functionRequest2" id="27c8b6e8-7dc8-4265-8bd9-70452755ee28">
        <con:settings/>
        <con:config xsi:type="con:MockResponseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeCallbackBinding</con:interface>
          <con:operation>requestFunction</con:operation>
          <con:path>/onResult</con:path>
          <con:port>8182</con:port>
          <con:response id="91705251-f0bf-41b9-a262-e31ffc0577e0">
            <con:settings/>
            <con:responseContent xsi:nil="true"/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
          </con:response>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="PropertyTransfer 2" id="ee69974b-7436-4ad1-8a3b-baaf8c66fa82">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="true" entitize="false" transferChildNodes="false">
            <con:name>functionRequest</con:name>
            <con:sourceType>Request</con:sourceType>
            <con:sourceStep>functionRequest1</con:sourceStep>
            <con:sourcePath>declare namespace ns1='http://www.example.org/OrchestratorElements/';
//ns1:functionRequest[1]</con:sourcePath>
            <con:targetType>Request</con:targetType>
            <con:targetStep>callUploadSong</con:targetStep>
            <con:targetPath>declare namespace orc='http://www.example.org/OrchestratorElements/';
//orc:CallUploadSong[1]/conversationId[1]</con:targetPath>
            <con:type>XPATH</con:type>
            <con:targetTransferType>XPATH</con:targetTransferType>
            <con:upgraded>true</con:upgraded>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="stop" id="55151cfb-aca6-4080-9774-2dde19c4ec91">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>DistributedSoundScapeBinding</con:interface>
          <con:operation>stopFunction</con:operation>
          <con:request name="stop" id="df64cfd8-3b72-48e1-a4ed-f354bc486d8d">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://localhost:8080/ode/processes/DistributedSoundScape</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:orc="http://www.example.org/OrchestratorElements/">
   <soapenv:Header/>
   <soapenv:Body>
      <orc:Stop>w8aaa</orc:Stop>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="ee6eb9d5-623d-4304-bfed-8ecb9eccf5d8"/>
            <con:credentials>
              <con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>clientId</con:name>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>27c8b6e8-7dc8-4265-8bd9-70452755ee28</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>55151cfb-aca6-4080-9774-2dde19c4ec91</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>220bcabe-f9c7-4e15-9451-02d699d8f835</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ee69974b-7436-4ad1-8a3b-baaf8c66fa82</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>75c9d61f-216f-4a92-9647-b36921087bab</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>ae9a35f3-edb6-4eb5-8111-7bc1afb1f3c1</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>1da4f6d8-f23f-4cca-8e0e-147cf6e44af3</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:reportTemplates/>
    <con:xmlTemplates/>
    <con:xmlTemplates/>
    <con:parameters/>
    <con:parameters/>
  </con:reporting>
  <con:reporting/>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
