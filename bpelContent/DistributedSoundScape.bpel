<!-- DistributedSoundScape BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Sun Apr 08 12:07:39 UTC 2018 -->
<bpel:process name="DistributedSoundScape"
	targetNamespace="DistributedSoundScape" suppressJoinFailure="yes"
	xmlns:tns="DistributedSoundScape"
	xmlns:rs="http://www.example.org/RegistrationService/"
	xmlns:us="http://www.example.org/UploadService/"
	xmlns:cs="http://www.example.org/ControlService/"
	xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
	xmlns:rse="http://www.example.org/RegistrationServiceElements/"
	xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
	xmlns:ns1="http://www.example.org/OrchestratorElements/"
	xmlns:ns2="http://www.example.org/RegistrationService/"
	xmlns:ns3="http://www.example.org/SoundScapeDataTypes/"
	xmlns:ns4="http://www.w3.org/2001/XMLSchema"
	xmlns:ns5="http://www.example.org/UploadServiceElements/"
	xmlns:xpath="http://www.w3.org/2005/xpath-functions"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:ode="http://www.apache.org/ode/type/extension">

	<!-- Import the client WSDL -->
	<bpel:import
		namespace="http://www.example.org/SoundScapeDataTypes/"
		location="schemas/type-definitions/SoundScapeDataTypes.xsd"
		importType="http://www.w3.org/2001/XMLSchema"></bpel:import>
	<bpel:import
		namespace="http://www.example.org/UploadServiceElements/"
		location="schemas/type-definitions/UploadServiceElements.xsd"
		importType="http://www.w3.org/2001/XMLSchema"></bpel:import>
	<bpel:import
		namespace="http://www.example.org/OrchestratorElements/"
		location="schemas/type-definitions/OrchestratorElements.xsd"
		importType="http://www.w3.org/2001/XMLSchema"></bpel:import>
	<bpel:import location="DistributedSoundScapeArtifacts.wsdl"
		namespace="DistributedSoundScape"
		importType="http://schemas.xmlsoap.org/wsdl/" />
	<bpel:import location="RegistrationService.wsdl"
		namespace="http://www.example.org/RegistrationService/"
		importType="http://schemas.xmlsoap.org/wsdl/" />

	<bpel:import location="UploadService.wsdl"
		namespace="http://www.example.org/UploadService/"
		importType="http://schemas.xmlsoap.org/wsdl/" />
	<bpel:import location="ControlService.wsdl"
		namespace="http://www.example.org/ControlService/"
		importType="http://schemas.xmlsoap.org/wsdl/" />

	<!-- ================================================================= -->
	<!-- PARTNERLINKS -->
	<!-- List of services participating in this BPEL process -->
	<!-- ================================================================= -->
	<bpel:partnerLinks>
		<!-- The 'client' role represents the requester of this service. -->
		<bpel:partnerLink name="client"
			partnerLinkType="tns:DistributedSoundScape"
			myRole="DistributedSoundScapeProvider"
			partnerRole="DistributedSoundScapeRequester" />

		<bpel:partnerLink name="RegistrationService"
			partnerLinkType="rs:RegistrationServiceLinkType"
			partnerRole="registrationService"></bpel:partnerLink>

		<bpel:partnerLink name="UploadService"
			partnerLinkType="us:UploadServiceLinkType"
			partnerRole="uploadProvider" myRole="uploadRequester"></bpel:partnerLink>

	</bpel:partnerLinks>

	<!-- ================================================================= -->
	<!-- VARIABLES -->
	<!-- List of messages and XML documents used within this BPEL process -->
	<!-- ================================================================= -->
	<bpel:variables>
		<!-- Reference to the message passed as input during initiation -->
		<bpel:variable name="InitialMessage"
			messageType="tns:InitialMessage" />

		<bpel:variable name="RegisterUserRequestMessage"
			messageType="rs:RegisterUserRequest"></bpel:variable>

		<bpel:variable name="RegisterUserResponseMessage"
			messageType="rs:RegisterUserResponse"></bpel:variable>

		<!-- Reference to the message that will be returned to the requester -->
		<bpel:variable name="ConfirmRegistrationMessage"
			messageType="tns:ConfirmRegistrationMessage" />

		<bpel:variable name="FunctionRequest"
			messageType="tns:FunctionRequest" />

		<bpel:variable name="UploadSongRequest"
			messageType="us:UploadSongRequest">
		</bpel:variable>

		<bpel:variable name="UploadSongResponse"
			messageType="us:UploadSongResponse"></bpel:variable>

        <bpel:variable name="xslFile" type="ns4:string">
            <bpel:from>
                <bpel:literal xml:space="preserve">test.xsl</bpel:literal>
            </bpel:from>
        </bpel:variable>
    </bpel:variables>

	<!-- ================================================================= -->
	<!-- ORCHESTRATION LOGIC -->
	<!-- Set of activities coordinating the flow of messages across the -->
	<!-- services integrated within this business process -->
	<!-- ================================================================= -->
	<bpel:correlationSets>
		<bpel:correlationSet name="UploadCorrelationSet"
			properties="tns:conversationId"></bpel:correlationSet>
	</bpel:correlationSets>
	<bpel:sequence name="main">

		<!-- Receive input from requester. Note: This maps to operation defined 
			in DistributedSoundScape.wsdl -->
		<bpel:receive name="receiveInput" partnerLink="client"
			portType="tns:DistributedSoundScape" operation="process"
			variable="InitialMessage" createInstance="yes" />

		<bpel:assign>
			<bpel:copy>
				<bpel:from>
					<bpel:literal xml:space="preserve"><tns:UploadSongRequest
						xmlns:tns="http://www.example.org/UploadServiceElements/"
						xmlns:tns1="http://www.example.org/SoundScapeDataTypes/"
						xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Link>
    <Type>ftp</Type>
    <Address>Address</Address>
  </Link>
  <Speakers>
  </Speakers>
  <conversationId>id</conversationId>
</tns:UploadSongRequest></bpel:literal>
				</bpel:from>
				<bpel:to variable="UploadSongRequest" part="Request"></bpel:to>
			</bpel:copy>
			<bpel:copy>
				<bpel:from
					expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                    <![CDATA[$InitialMessage.RegisterUserRequest//Speakers]]>
				</bpel:from>
				<bpel:to
					expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                    <![CDATA[$UploadSongRequest.Request//Speakers]]>
				</bpel:to>
			</bpel:copy>
			<bpel:copy>
				<bpel:from
					expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                    <![CDATA[$InitialMessage.RegisterUserRequest//Link]]>
				</bpel:from>
				<bpel:to
					expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                    <![CDATA[$UploadSongRequest.Request//Link]]>
				</bpel:to>
			</bpel:copy>
			<!-- 
			<bpel:copy xmlns:ext="java:com.example.xpath.Random">
        		<bpel:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0">
                    <![CDATA[ext:random()]]>
                </bpel:from>
				<bpel:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0">
                    <![CDATA[$UploadSongRequest.Request//conversationId]]>
                </bpel:to>
			</bpel:copy>
			 -->
			 <bpel:copy>
        		<bpel:from>
                    <![CDATA[bpel:doXslTransform("HelloXslWorld.xsl", $UploadSongRequest.Request//conversationId)]]>
                </bpel:from>
				<bpel:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0">
                    <![CDATA[$UploadSongRequest.Request//conversationId]]>
                </bpel:to>
			</bpel:copy>
		</bpel:assign>

		<!-- <bpel:reply partnerLink="client" operation="onResult" portType="tns:DistributedSoundScape" 
			variable="ConfirmRegistrationMessage" /> -->
		<bpel:flow>
			<bpel:invoke name="UploadSong" partnerLink="UploadService"
				portType="us:UploadService" operation="UploadSong"
				inputVariable="UploadSongRequest">
				<bpel:correlations>
					<bpel:correlation set="UploadCorrelationSet"
						initiate="yes"></bpel:correlation>
				</bpel:correlations>
			</bpel:invoke>
			<bpel:invoke name="UploadSong" partnerLink="UploadService"
				portType="us:UploadService" operation="UploadSong"
				inputVariable="UploadSongRequest">
				<bpel:correlations>
					<bpel:correlation set="UploadCorrelationSet"
						initiate="yes"></bpel:correlation>
				</bpel:correlations>
			</bpel:invoke>
		</bpel:flow>
		
		<bpel:receive name="receiveUploadSongCallback"
			partnerLink="UploadService" portType="us:UploadCallbackService"
			operation="UploadSongCallback" variable="UploadSongResponse">
			<bpel:correlations>
				<bpel:correlation set="UploadCorrelationSet"
					initiate="no"></bpel:correlation>
			</bpel:correlations>
		</bpel:receive>
		<bpel:receive name="receiveUploadSongCallback"
			partnerLink="UploadService" portType="us:UploadCallbackService"
			operation="UploadSongCallback" variable="UploadSongResponse">
			<bpel:correlations>
				<bpel:correlation set="UploadCorrelationSet"
					initiate="no"></bpel:correlation>
			</bpel:correlations>
		</bpel:receive>
		<!-- <bpel:assign> <bpel:copy> <bpel:from variable="InitialMessage" part="RegisterUserRequest" 
			/> <bpel:to variable="RegisterUserRequestMessage" part="RegisterUserRequest" 
			/> </bpel:copy> </bpel:assign> <bpel:invoke partnerLink="RegistrationService" 
			portType="rs:RegistrationService" operation="RegisterUser" inputVariable="RegisterUserRequestMessage" 
			outputVariable="RegisterUserResponseMessage"> </bpel:invoke> <bpel:assign> 
			<bpel:copy> <bpel:from variable="RegisterUserResponseMessage" part="RegisterUserResponse" 
			/> <bpel:to variable="ConfirmRegistrationMessage" part="RegisterUserResponse" 
			/> </bpel:copy> </bpel:assign> <bpel:invoke name="callbackClient" partnerLink="client" 
			portType="tns:DistributedSoundScapeCallback" operation="onResult" inputVariable="ConfirmRegistrationMessage"> 
			</bpel:invoke> -->
		<!-- Call RegisterUser <bpel:assign> <bpel:copy> <bpel:from variable="InitialMessage" 
			part="RegisterUserRequest" /> <bpel:to variable="RegisterUserRequestMessage" 
			part="RegisterUserRequest" /> </bpel:copy> </bpel:assign> <bpel:invoke partnerLink="RegistrationService" 
			portType="rs:RegistrationService" operation="RegisterUser" inputVariable="RegisterUserRequestMessage" 
			outputVariable="RegisterUserResponseMessage"> </bpel:invoke> <bpel:assign> 
			<bpel:copy> <bpel:from variable="RegisterUserResponseMessage" part="RegisterUserResponse" 
			/> <bpel:to variable="ConfirmRegistrationMessage" part="RegisterUserResponse" 
			/> </bpel:copy> </bpel:assign> <bpel:invoke name="callbackClient" partnerLink="client" 
			portType="tns:DistributedSoundScapeCallback" operation="onResult" inputVariable="ConfirmRegistrationMessage"> 
			</bpel:invoke> -->
		<!-- <bpel:receive name="receiveCommand" partnerLink="client" portType="tns:DistributedSoundScape" 
			operation="callFunction" variable="FunctionRequest" createInstance="no"> 
			</bpel:receive> -->
	</bpel:sequence>
</bpel:process>
	
	

