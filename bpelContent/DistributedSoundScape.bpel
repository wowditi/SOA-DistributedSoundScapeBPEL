<!-- DistributedSoundScape BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Sun Apr 08 12:07:39 UTC 2018 -->
<bpel:process name="DistributedSoundScape"
	targetNamespace="DistributedSoundScape" suppressJoinFailure="yes"
	xmlns:tns="DistributedSoundScape"
	xmlns:rs="http://www.example.org/RegistrationService/"
	xmlns:us="http://www.example.org/UploadService/"
	xmlns:cs="http://www.example.org/ControlService/"
	xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
	xmlns:rse="http://www.example.org/RegistrationServiceElements/"
	xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
	xmlns:ns1="http://www.example.org/OrchestratorElements/"
	xmlns:ns2="http://www.example.org/RegistrationService/"
	xmlns:ns3="http://www.example.org/SoundScapeDataTypes/"
	xmlns:ns4="http://www.w3.org/2001/XMLSchema"
	xmlns:ns5="http://www.example.org/UploadServiceElements/"
	xmlns:xpath="http://www.w3.org/2005/xpath-functions"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:ode="http://www.apache.org/ode/type/extension"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema">

	<!-- Import the client WSDL -->
	<bpel:import
		namespace="http://www.example.org/SoundScapeDataTypes/"
		location="schemas/type-definitions/SoundScapeDataTypes.xsd"
		importType="http://www.w3.org/2001/XMLSchema"></bpel:import>
	<bpel:import
		namespace="http://www.example.org/UploadServiceElements/"
		location="schemas/type-definitions/UploadServiceElements.xsd"
		importType="http://www.w3.org/2001/XMLSchema"></bpel:import>
	<bpel:import
		namespace="http://www.example.org/OrchestratorElements/"
		location="schemas/type-definitions/OrchestratorElements.xsd"
		importType="http://www.w3.org/2001/XMLSchema"></bpel:import>
	<bpel:import location="DistributedSoundScapeArtifacts.wsdl"
		namespace="DistributedSoundScape"
		importType="http://schemas.xmlsoap.org/wsdl/" />
	<bpel:import location="RegistrationService.wsdl"
		namespace="http://www.example.org/RegistrationService/"
		importType="http://schemas.xmlsoap.org/wsdl/" />

	<bpel:import location="UploadService.wsdl"
		namespace="http://www.example.org/UploadService/"
		importType="http://schemas.xmlsoap.org/wsdl/" />
	<bpel:import location="ControlService.wsdl"
		namespace="http://www.example.org/ControlService/"
		importType="http://schemas.xmlsoap.org/wsdl/" />

	<!-- ================================================================= -->
	<!-- PARTNERLINKS -->
	<!-- List of services participating in this BPEL process -->
	<!-- ================================================================= -->
	<bpel:partnerLinks>
		<!-- The 'client' role represents the requester of this service. -->
		<bpel:partnerLink name="client"
			partnerLinkType="tns:DistributedSoundScape"
			myRole="DistributedSoundScapeProvider"
			partnerRole="DistributedSoundScapeRequester" />

		<bpel:partnerLink name="RegistrationService"
			partnerLinkType="rs:RegistrationServiceLinkType"
			partnerRole="registrationService"></bpel:partnerLink>

		<bpel:partnerLink name="UploadService"
			partnerLinkType="us:UploadServiceLinkType"
			partnerRole="uploadProvider" myRole="uploadRequester"></bpel:partnerLink>

		<bpel:partnerLink name="ControlService"
			partnerLinkType="cs:ControlServiceLinkType"
			partnerRole="controlService"></bpel:partnerLink>

	</bpel:partnerLinks>

	<!-- ================================================================= -->
	<!-- VARIABLES -->
	<!-- List of messages and XML documents used within this BPEL process -->
	<!-- ================================================================= -->
	<bpel:variables>
		<!-- Reference to the message passed as input during initiation -->
		<bpel:variable name="RegisterUserMessage"
			messageType="tns:RegisterUserRequest" />

		<bpel:variable name="RegisterUserRequestMessage"
			messageType="rs:RegisterUserRequest"></bpel:variable>

		<bpel:variable name="RegisterUserResponseMessage"
			messageType="rs:RegisterUserResponse"></bpel:variable>

		<bpel:variable name="finishMessage"
			messageType="tns:finishMessage"></bpel:variable>

		<bpel:variable name="UploadSongCall"
			messageType="tns:UploadSongRequest"></bpel:variable>

		<bpel:variable name="UploadSongRequest"
			messageType="us:UploadSongRequest">
		</bpel:variable>
		<bpel:variable name="UploadSongRequest2"
			messageType="us:UploadSongRequest">
		</bpel:variable>

		<bpel:variable name="UploadSongResponse"
			messageType="us:UploadSongResponse"></bpel:variable>

		<bpel:variable name="uploadServiceConversationId"
			element="xsd:string"></bpel:variable>

		<bpel:variable name="clientConversationId"
			element="xsd:string"></bpel:variable>

		<bpel:variable name="tempId"
			messageType="tns:stopRequest"></bpel:variable>

		<bpel:variable name="stop" element="xsd:string"></bpel:variable>

		<bpel:variable name="clientRequest"
			messageType="tns:functionRequest"></bpel:variable>
	</bpel:variables>

	<!-- ================================================================= -->
	<!-- ORCHESTRATION LOGIC -->
	<!-- Set of activities coordinating the flow of messages across the -->
	<!-- services integrated within this business process -->
	<!-- ================================================================= -->
	<bpel:correlationSets>
		<bpel:correlationSet name="UploadCorrelationSet"
			properties="tns:conversationId"></bpel:correlationSet>
		<bpel:correlationSet name="ClientCorrelationSet"
			properties="tns:conversationId"></bpel:correlationSet>
	</bpel:correlationSets>

    <bpel:sequence name="main"><!-- Receive input from requester. Note: This maps to operation defined 
			in DistributedSoundScape.wsdl -->
		<bpel:receive name="receiveInput" partnerLink="client" portType="tns:DistributedSoundScape" operation="RegisterUserFunction" variable="RegisterUserMessage" createInstance="yes" />
		
        <bpel:assign validate="no" name="RegisterUserAssign">
            <bpel:copy>
                <bpel:from part="RegisterUserRequest" variable="RegisterUserMessage"></bpel:from>
                <bpel:to part="RegisterUserRequest" variable="RegisterUserRequestMessage"></bpel:to>
            </bpel:copy>
        </bpel:assign>
        
        <bpel:invoke name="RegisterUser" partnerLink="RegistrationService" operation="RegisterUser" inputVariable="RegisterUserRequestMessage" outputVariable="RegisterUserResponseMessage">
        </bpel:invoke>
                       
        <bpel:assign>
            <bpel:copy><bpel:from>
                    <bpel:literal xml:space="preserve">0</bpel:literal>
                </bpel:from>
                <bpel:to variable="uploadServiceConversationId"></bpel:to>
            </bpel:copy>
            <bpel:copy><bpel:from>
	                    <![CDATA[bpel:doXslTransform("HelloXslWorld.xsl", $uploadServiceConversationId)]]>
				</bpel:from>
				<bpel:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0" variable="uploadServiceConversationId">
				</bpel:to>
            </bpel:copy>
        </bpel:assign>
        
        <bpel:assign>
            <bpel:copy><bpel:from>
                    <bpel:literal xml:space="preserve">0</bpel:literal>
                </bpel:from>
                <bpel:to variable="clientConversationId"></bpel:to>
            </bpel:copy>
            <bpel:copy><bpel:from>
	                    <![CDATA[bpel:doXslTransform("HelloXslWorld.xsl", $clientConversationId)]]>
				</bpel:from>
				<bpel:to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0" variable="clientConversationId">
				</bpel:to>
            </bpel:copy>
        </bpel:assign>
        
        <bpel:assign validate="no" name="Assign">
            <bpel:copy>
                <bpel:from>
                    <bpel:literal xml:space="preserve">false</bpel:literal>
                </bpel:from>
                <bpel:to variable="stop"></bpel:to>
            </bpel:copy>
        </bpel:assign>
        			
        	
        <bpel:assign validate="no" name="AssignReguestFunction">
            <bpel:copy>
                <bpel:from>
                	<bpel:literal>
                		<tns:functionRequest xmlns:tns="http://www.example.org/OrchestratorElements/" xmlns:tns1="http://www.example.org/SoundScapeDataTypes/" xmlns:tns2="http://www.example.org/RegistrationServiceElements/" xmlns:tns3="http://www.example.org/ControlServiceElements/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">tns:functionRequest
                		</tns:functionRequest>
					</bpel:literal>
				</bpel:from>
                <bpel:to variable="clientRequest" part="functionRequest"></bpel:to>
            </bpel:copy>
            <bpel:copy>
                <bpel:from variable="clientConversationId"></bpel:from>
                <bpel:to part="functionRequest" variable="clientRequest"></bpel:to>
            </bpel:copy>
        </bpel:assign>
        <bpel:invoke name="RequestFunction" partnerLink="client" operation="requestFunction" portType="tns:DistributedSoundScapeCallback" inputVariable="clientRequest">
            <bpel:correlations>
                <bpel:correlation set="ClientCorrelationSet" initiate="yes"></bpel:correlation>
            </bpel:correlations>
        </bpel:invoke>
                     
        <bpel:repeatUntil>
	        <bpel:pick name="Pick">
	            <bpel:onMessage partnerLink="client" operation="UploadSongFunction" portType="tns:DistributedSoundScape" variable="UploadSongCall">
	            	<bpel:correlations>
						<bpel:correlation set="ClientCorrelationSet" initiate="no"></bpel:correlation>
					</bpel:correlations>
	            	<bpel:scope name="UploadSongScope">
	            		<bpel:sequence>
		            		<bpel:invoke name="UploadSong" partnerLink="UploadService" portType="us:UploadService" operation="UploadSong" inputVariable="UploadSongRequest">
								<bpel:correlations>
									<bpel:correlation set="UploadCorrelationSet" initiate="yes"></bpel:correlation>
								</bpel:correlations>
							</bpel:invoke>
						</bpel:sequence>
	            	</bpel:scope>
	            	
	            </bpel:onMessage>
	            <bpel:onMessage partnerLink="UploadService" portType="us:UploadCallbackService" operation="UploadSongCallback" variable="UploadSongResponse">
	            	<bpel:assign validate="no" name="Assign1">
                        <bpel:copy>
                            <bpel:from>
                                <bpel:literal xml:space="preserve">true</bpel:literal>
                            </bpel:from>
                            <bpel:to variable="stop"></bpel:to>
                        </bpel:copy>
                    </bpel:assign>
	            </bpel:onMessage>
	            <bpel:onMessage partnerLink="client" portType="tns:DistributedSoundScape" operation="stopFunction" variable="tempId">
	            	<bpel:correlations>
						<bpel:correlation set="ClientCorrelationSet" initiate="no"></bpel:correlation>
					</bpel:correlations>
                    <bpel:assign validate="no" name="Assign1">
                        <bpel:copy>
                            <bpel:from>
                                <bpel:literal xml:space="preserve">true</bpel:literal>
                            </bpel:from>
                            <bpel:to variable="stop"></bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                </bpel:onMessage>
	        </bpel:pick>
	        <bpel:condition>
	        	$stop
	        </bpel:condition>
        </bpel:repeatUntil>
        
        <bpel:assign validate="no" name="RegisterUserResponseAssign">
            <bpel:copy>
                <bpel:from part="RegisterUserResponse" variable="RegisterUserResponseMessage"></bpel:from>
                <bpel:to part="RegisterUserResponse" variable="finishMessage"></bpel:to>
            </bpel:copy>
        </bpel:assign>
    </bpel:sequence>
</bpel:process>
	
	

